= Connecting (wiring) nodes =
#action_context: h.pane.wsheet
#bestbet: connect wire noodle link

"""How to connect nodes to each other to make them work together."""


== Overview ==

:vimeo: Dots and wires
    #id: 204582189

In Houdini networks, nodes have input and output _connectors_, which you connect together with _wires_.

Wires have different meanings in different [network types|flags]:

* In Object (OBJ) networks, the connections control parenting (connect child objects to the outputs of parent objects).

* In geometry (SOPs), compositing (COPs), dynamics (DOPs), and VOP networks connections control the flow of data through the network.

* In render output (ROPs) networks, connections control dependencies between render passes (connect later renders to the outputs of prerequisite renders).


== How to ==

:task: Connect node inputs and outputs:
    * Click one node's output and then click another node's input (or vice-versa) to wire them togeher.
    
        _or_
        
    * _Drag_ from one connector to another instead of using separate clicks.
        
    (You can click in empty space to cancel the wiring operation.)

[Include:nodes#branch_wire]

:task: Insert a node into an existing wire:
    Drop a node onto an existing wire to insert it between the wire's input and output.

:task: Disconnect wires:
    There are several ways to disconnect a wire.

    * Shake a node to disconnect its inputs and outputs.
    
    * Select a wire and press ((Del)) to delete it.
    
    * Click the connection's _input_, then click in empty space.
          
    * Right-click the wire and choose __Disconnect__.

:task: Branch an already-connected output to another input:
    # Click an output that is already connected to something.

    # Click the additional input.

:task: Cut wires by drawing a line:
    Hold ((Y)) and drag a line across a wire or multiple wires to disconnect them.

Cut wires:
    #action: cut_wires_mode

    Hold this key and drag to cut any wires you drag over.


== Wiring tips ==

:vimeo: Duplicate wires
    #id: 204582188

* Right-click a wire to see a menu of operations you can perform on the wire.

* You can hold ((Space)) and pan and zoom the network view while connecting, if you need to bring the node you're connecting to into view.

* Press ((Alt + LMB)) on a node to get a menu of connectors to start wiring. This can be useful when you're zoomed out so far it's hard to click the connectors.

* If you select multiple nodes and connect one of their outputs to a multi-input, Houdini automatically connects the outputs of all the selected nodes. This is useful when you want to connect a bunch of nodes to a Merge node.

* You can hover on an input to get a tooltip explaining the purpose of the input (if the node author wrote help for the input).


== Routing with dots == (dots)

The network editor lets you add "dots" to wires to route them away from a straight path between the output and input.

:task: Add a dot to an existing wire:
    Hold ((Alt)) and click the wire.

:task: Add a dot while creating a new wire:
    Click the output/input connector to start the wire, then ((Alt-click)) one or more times to add dots, then click the destination connector to finish the wire.

:task: Rewire from a dot:
    Hover the mouse pointer over the dot to show input and output connectors. You can wire to/from these connectors like the usual connectors on a node.

:task: Gather multiple wires into a dot:
    If you hold Alt while dragging a dot, it will "pick up" wires it crosses like walking through spiderwebs. This is a quick way of gathering a bunch of wires together.


=== Pinning dots ===

Dots have two states: pinned and unpinned. Alt-click a dot to toggle this state. A pinned dot has a life of its own. You can disconnect all the wires into and out of it, and it sticks around. A pinned dot is very much like a dot in Nuke, and lets you build chunks of networks, with dangling dots as scoffolding which you can connect to later.

An unpinned dot is meant to allow for simple wire routing without a lot of overhead. An unpinned dot gets automatically deleted if all the wires into or all the wires out of it get deleted (since without a wire passing all the way through it, an unpinned dot serves no purpose).


== Reordering inputs ==

* Some nodes, for example the [Merge geometry node|Node:sop/merge], have "multi-inputs" that let you wire in multiple inputs.

* In some nodes with multi-inputs, the order of the inputs is sometimes significant. For example, Render nodes (ROPs) render their inputs in order.

:task: Change the order of inputs:
    # Select the node in the network editor.
    
    # In the parameter editor, scroll down to the bottom of the panel.
    
        For nodes with multiple inputs there will be a list of inputs.

        [Image:/images/ui/node_inputorder.png]

    # Drag and drop the inputs in the list or click the up-arrow icons to reorder them.

:task: Quickly rotate input order:
    # Select the node.
    
    # In the network editor, choose __Edit > Rotate input connections__ or press ((Shift + R)).


@actions

Move Input Index Here:
    #action: move_active_index

    Moves the active index of the selected to node to the current input

Disconnect Input:
    #action: disconnect_active_index

    Disconnects the node from the current input


@related

- [Network editor|nodes]
- [Navigating networks|navigate]

