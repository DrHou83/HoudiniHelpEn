= hou.ChannelGraph =
#type: homclass
#cppname: HOM_ChannelGraph
#group: channels

@methods

::`selectedKeyframes(self)` -> dictionary of ([hou.Parm], tuple of [Hom:hou.BaseKeyframe]) pairs:
    #cppname: HOM_ChannelGraph::selectedKeyframes
    Returns a dictionary of (hou.Parm, keyframes) which are currently selected
    in the graph.
    
    For example, to scale the selected key values by 2:
    
    {{{
    #!python
    channel_editor = hou.ui.paneTabOfType(hou.paneTabType.ChannelEditor)
    keyframes = channel_editor.graph().selectedKeyframes()
    for parm in keyframes.keys():
	for key in keyframes[parm]:
	    key.setValue(2 * key.value())
	    parm.setKeyframe(key)
    }}}

::`setGridDetailLevel(self, level)`:
    #cppname: HOM_ChannelGraph::setGridDetailLevel
    #status: ni

::`setHorizontalRange(self, start, end)`:
    #cppname: HOM_ChannelGraph::setHorizontalRange
    #status: ni
    
::`setMaxHorizontalRange(self, start, end)`:
    #cppname: HOM_ChannelGraph::setMaxHorizontalRange
    #status: ni
    
::`setMinimizedChannelTools(self, on)`:
    #cppname: HOM_ChannelGraph::setMinimizedChannelTools
    #status: ni
    
::`setMinimizedFunctionGadget(self, on)`:
    #cppname: HOM_ChannelGraph::setMinimizedFunctionGadget
    #status: ni
    
::`setMinimizedRangeGadget(self, on)`:
    #cppname: HOM_ChannelGraph::setMinimizedRangeGadget
    #status: ni

::`setMinimizedScaleHandle(self, on)`:
    #cppname: HOM_ChannelGraph::setMinimizedScaleHandle
    #status: ni
    
::`setRawInterpolation(self, on)`:
    #cppname: HOM_ChannelGraph::setRawInterpolation
    #status: ni
    
::`setScaleHandleValue(self, value)`:
    #cppname: HOM_ChannelGraph::setScaleHandleValue
    #status: ni
    
::`setSnapToFrame(self, on)`:
    #cppname: HOM_ChannelGraph::setSnapToFrame
    #status: ni
    
::`setVerticalAdapt(self, on)`:
    #cppname: HOM_ChannelGraph::setVerticalAdapt
    #status: ni
    
::`showAttachedTimeGroups(self, on)`:
    #cppname: HOM_ChannelGraph::showAttachedTimeGroups
    #status: ni
    
::`showRawHandle(self, on)`:
    #cppname: HOM_ChannelGraph::showRawHandle
    #status: ni
    
::`showRelativeMoves(self, on)`:
    #cppname: HOM_ChannelGraph::showRelativeMoves
    #status: ni
    
::`showScaleHandle(self, on)`:
    #cppname: HOM_ChannelGraph::showScaleHandle
    #status: ni
    
::`showSegmentHandle(self, on)`:
    #cppname: HOM_ChannelGraph::showSegmentHandle
    #status: ni
    
::`showSlopeHandle(self, on)`:
    #cppname: HOM_ChannelGraph::showSlopeHandle
    #status: ni
    
::`showTimeGroupHandle(self, on)`:
    #cppname: HOM_ChannelGraph::showTimeGroupHandle
    #status: ni
    
::`showTimeMarkHandle(self, on)`:
    #cppname: HOM_ChannelGraph::showTimeMarkHandle
    #status: ni
    
::`showValueHandle(self, on)`:
    #cppname: HOM_ChannelGraph::showValueHandle
    #status: ni
    
@replaces

- [Cmd:animeditor]


