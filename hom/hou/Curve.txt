= hou.Curve =
#type: homclass
#cppname: HOM_Curve
#superclass: hou.Face
#group: geo
#status: ni

@methods

::`derivativeAtU(self, u, derivative=1)` -> [Hom:hou.Vector3]:
    #cppname: HOM_Curve::derivativeAtU
    #status: ni

::`knotValue(self, knot_index)`:
    #cppname: HOM_Curve::knotValue
    #status: ni

::`normalAt(self, u)` -> [Hom:hou.Vector3]:
    #cppname: HOM_Curve::normalAt
    #status: ni

::`parametricToUniform(self, u)`:
    #cppname: HOM_Curve::parametricToUniform
    #status: ni

::`uniformToParametric(self, u)`:
    #cppname: HOM_Curve::uniformToParametric
    #status: ni

@replaces

- [Exp:normal]
- [Exp:realuv]
- [Exp:spknot]
- [Exp:unituv]
