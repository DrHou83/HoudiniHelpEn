= hou.cycleoffsett =

#type: homfunction
#cppname: hom::cycleoffsett
#group: channels

"""Repeats the motion
between two times, lining up the repeated values with the left
keyframe's value."""

:usage: `cycleoffsett(start_time, end_time)` -> float

The repeated values are shifted so that each repeated portion has its
first value set to the last value of the previous cycle. If the start
frame is less than the end frame, the animation will cycle forwards.
Otherwise, it will cycle backwards.

This function is the same as hou.cycleoffset() except hou.cycleoffset() accepts
frames instead of times. If you want to repeat motion exactly, use the
hou.cyclet() function instead.

This function is one of the special animation functions that use the
current playbar time and information in the parameter's keyframes, such
as in and out values, tangents, acceleration, etc., to evaluate
themselves. Because the information needed to evaluate these functions
comes from the keyframes, these functions take few or no parameters.

Calling this function from outside a parameter's expression will raise a
hou.NotAvailable exception.

@related

- [Hom:hou.bezier]
- [Hom:hou.constant]
- [Hom:hou.cubic]
- [Hom:hou.cycle]
- [Hom:hou.cyclet]
- [Hom:hou.cycleoffset]
- [Hom:hou.ease]
- [Hom:hou.easein]
- [Hom:hou.easeinp]
- [Hom:hou.easeout]
- [Hom:hou.easeoutp]
- [Hom:hou.easep]
- [Hom:hou.linear]
- [Hom:hou.match]
- [Hom:hou.matchin]
- [Hom:hou.matchout]
- [Hom:hou.qlinear]
- [Hom:hou.quintic]
- [Hom:hou.spline]
- [Hom:hou.vmatch]
- [Hom:hou.vmatchin]
- [Hom:hou.vmatchout]

@replaces

- [Exp:cycleoffsett]

