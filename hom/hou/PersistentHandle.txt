= hou.PersistentHandle =
#type: homclass
#cppname: HOM_PersistentHandle
#group: view
#status: ni

@methods

::`addParmBinding(self, parm, handle_parm_name)`:
    #cppname: HOM_PersistentHandle::addParmBinding
    #status: ni

::`asCode(self)`:
    #cppname: HOM_PersistentHandle::asCode
    #status: ni

::`clearParmBindings(self)`:
    #cppname: HOM_PersistentHandle::clearParmBindings
    #status: ni

::`color(self)` -> Color:
    #cppname: HOM_PersistentHandle::color
    #status: ni

::`destroy(self)`:
    #cppname: HOM_PersistentHandle::destroy
    #status: ni

::`handleType(self)` -> HandleType:
    #cppname: HOM_PersistentHandle::handleType
    #status: ni

::`isShownForChildNode(self)`:
    #cppname: HOM_PersistentHandle::isShownForChildNode
    #status: ni

::`isShownForParentNodes(self)`:
    #cppname: HOM_PersistentHandle::isShownForParentNodes
    #status: ni

::`isShownForSiblingNodes(self)`:
    #cppname: HOM_PersistentHandle::isShownForSiblingNodes
    #status: ni

::`isVisible(self, on)`:
    #cppname: HOM_PersistentHandle::isVisible
    #status: ni

::`name(self)`:
    #cppname: HOM_PersistentHandle::name
    #status: ni

::`paneMask(self)`:
    #cppname: HOM_PersistentHandle::paneMask
    #status: ni

::`parmBindings(self)` -> tuple of PersistentHandleParmBindings:
    #cppname: HOM_PersistentHandle::parmBindings
    #status: ni

::`primaryNode(self)` -> Node or None:
    #cppname: HOM_PersistentHandle::primaryNode
    #status: ni

::`removeBindingsToNode(self, node)`:
    #cppname: HOM_PersistentHandle::removeBindingsToNode
    #status: ni

::`setColor(self, color)`:
    #cppname: HOM_PersistentHandle::setColor
    #status: ni

::`setIsVisible(self, on)`:
    #cppname: HOM_PersistentHandle::setIsVisible
    #status: ni

::`setName(self, name)`:
    #cppname: HOM_PersistentHandle::setName
    #status: ni

::`setPaneMask(self, mask)`:
    #cppname: HOM_PersistentHandle::setPaneMask
    #status: ni

::`settings(self)` -> dict:
    #cppname: HOM_PersistentHandle::settings
    #status: ni

::`showForChildNode(self, on)`:
    #cppname: HOM_PersistentHandle::showForChildNode
    #status: ni

::`showForParentNodes(self, on)`:
    #cppname: HOM_PersistentHandle::showForParentNodes
    #status: ni

::`showForSiblingNodes(self, on)`:
    #cppname: HOM_PersistentHandle::showForSiblingNodes
    #status: ni

@replaces

- [Cmd:pomadd]
- [Cmd:pomattach]
- [Cmd:pomclear]
- [Cmd:pomdetach]
- [Cmd:pomparm]
- [Cmd:pomremove]
- [Cmd:pomrename]
- [Cmd:pomscript]
- [Cmd:pomset]

