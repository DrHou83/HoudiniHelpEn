= hou.knownFileTypes =
#type: hommodule
#cppname: HOM_knownFileTypes
#group: file
#status: ni

@functions

::`channelInput()` -> tuple of FileTypes:
    #cppname: HOM_knownFileTypes::channelInput
    #status: ni

::`channelOutput()` -> tuple of FileTypes:
    #cppname: HOM_knownFileTypes::channelOutput
    #status: ni

::`geometryInput()` -> tuple of FileTypes:
    #cppname: HOM_knownFileTypes::geometryInput
    #status: ni

::`geometryOutput()` -> tuple of FileTypes:
    #cppname: HOM_knownFileTypes::geometryOutput
    #status: ni

::`imageInput()` -> tuple of FileTypes:
    #cppname: HOM_knownFileTypes::imageInput
    #status: ni

::`imageOutput()` -> tuple of FileTypes:
    #cppname: HOM_knownFileTypes::imageOutput
    #status: ni

::`lUTInput()` -> tuple of FileTypes:
    #cppname: HOM_knownFileTypes::lUTInput
    #status: ni

::`lUTOutput()` -> tuple of FileTypes:
    #cppname: HOM_knownFileTypes::lUTOutput
    #status: ni

::`scriptInput()` -> tuple of FileTypes:
    #cppname: HOM_knownFileTypes::scriptInput
    #status: ni

::`scriptOutput()` -> tuple of FileTypes:
    #cppname: HOM_knownFileTypes::scriptOutput
    #status: ni

::`simDataInput()` -> tuple of FileTypes:
    #cppname: HOM_knownFileTypes::simDataInput
    #status: ni

::`simDataOutput()` -> tuple of FileTypes:
    #cppname: HOM_knownFileTypes::simDataOutput
    #status: ni

::`simInput()` -> tuple of FileTypes:
    #cppname: HOM_knownFileTypes::simInput
    #status: ni

::`simOutput()` -> tuple of FileTypes:
    #cppname: HOM_knownFileTypes::simOutput
    #status: ni

::`volumetricInput()` -> tuple of FileTypes:
    #cppname: HOM_knownFileTypes::volumetricInput
    #status: ni

::`volumetricOutput()` -> tuple of FileTypes:
    #cppname: HOM_knownFileTypes::volumetricOutput
    #status: ni



