= hou.PerfMonProfile =
#type: homclass
#cppname: HOM_PerfMonProfile
#group: performance

"""Represents a performance monitor profile."""

@methods

::`cancel(self)`:
    #cppname: HOM_PerfMonProfile::cancel

    Stop the profile from recording timed events and remove it from the performance monitor.

    Raises [Hom:hou.OperationFailed] if the profile is not active, that is, the profile is neither recording nor paused.

::`exportAsCSV(self, file_path)`:
    #cppname: HOM_PerfMonProfile::exportAsCSV

    Export the profile statistics to disk using a comma-separated (CSV) format.  The exported .csv file can be loaded into a spreadsheet application such as Microsoft Excel and used to generate graphs.

    Raises [Hom:hou.OperationFailed] if the profile is still active or if the .csv file could not be written to disk (i.e. permission problems).

::`id(self)` -> `int`:
    #cppname: HOM_PerfMonProfile::id

    Return the profile's unique identifier which is used internally by the performance monitor.

::`isActive(self)` -> `bool`:
    #cppname: HOM_PerfMonProfile::isActive

    Return True if the profile is either recording events or is paused.

::`isRecordingCookStats(self)` -> `bool`:
    #cppname: HOM_PerfMonProfile::isRecordingCookStats

    Return True if the profile is recording cook events and statistics.

::`isRecordingDrawStats(self)` -> `bool`:
    #cppname: HOM_PerfMonProfile::isRecordingDrawStats

    Return True if the profile is recording draw events and statistics.

::`isRecordingErrors(self)` -> `bool`:
    #cppname: HOM_PerfMonProfile::isRecordingErrors

    Return True if the profile is recording errors.

::`isRecordingFrameStats(self)` -> `bool`:
    #cppname: HOM_PerfMonProfile::isRecordingFrameStats

    Return True if the profile is recording frame events and statistics.

::`isRecordingGPUDrawStats(self)` -> `bool`:
    #cppname: HOM_PerfMonProfile::isRecordingGPUDrawStats

    Return True if the profile is recording GPU draw events and statistics.

::`isRecordingRenderStats(self)` -> `bool`:
    #cppname: HOM_PerfMonProfile::isRecordingRenderStats

    Return True if the profile is recording statistics related to rendering.

::`isRecordingScriptStats(self)` -> `bool`:
    #cppname: HOM_PerfMonProfile::isRecordingScriptStats

    Return True if the profile is recording script events and statistics.

::`isRecordingSolveStats(self)` -> `bool`:
    #cppname: HOM_PerfMonProfile::isRecordingSolveStats

    Return True if the profile is recording simulation solver events and statistics.

::`isRecordingThreadStats(self)` -> `bool`:
    #cppname: HOM_PerfMonProfile::isRecordingThreadStats

    Return True if the profile is recording thread statistics.

::`isRecordingViewportStats(self)` -> `bool`:
    #cppname: HOM_PerfMonProfile::isRecordingViewportStats

    Return True if the profile is recording viewport events and statistics.

::`isPaused(self)` -> `bool`:
    #cppname: HOM_PerfMonProfile::isPaused

    Return True if the profile is paused from recording.

::`pause(self)`:
    #cppname: HOM_PerfMonProfile::pause

    Pause the profile from recording events and statistics.

    Raises [Hom:hou.OperationFailed] if the profile is stopped or already paused.

::`resume(self)`:
    #cppname: HOM_PerfMonProfile::resume

    Unpause the profile so that it can record events and statistics.

    Raises [Hom:hou.OperationFailed] if the profile is stopped or is already recording (i.e. not paused).

::`save(self, file_path)`:
    #cppname: HOM_PerfMonProfile::save

    Save the profile to disk.

    Raises [Hom:hou.OperationFailed] if the profile is still active or if the file could not be written to disk (i.e. permission problems).

::`stats(self)`:
    #cppname: HOM_PerfMonProfile::stats

    Return the profile statistics in JSON format.

    Raises [Hom:hou.OperationFailed] if the profile is still active and has not generated any statistics.

::`stop(self)`:
    #cppname: HOM_PerfMonProfile::stop

    Stop the profile from recording and generate statistics for the events that it has already recorded.

    Raises [Hom:hou.OperatioNFailed] if the profile is not active.

::`title(self)` -> `str`:
    #cppname: HOM_PerfMonProfile::title

    Return the profile title.

@related

    - [Hom:hou.perfMon]
    - [Hom:hou.PerfMonEvent]
    - [Hom:hou.PerfMonRecordOptions]
    - [Performance monitor pane|/ref/panes/perfmon]



