= hou.quintic =

#type: homfunction
#cppname: hom::quintic
#group: channels

"""Evaluate an interpolation function for an animated parameter that
gives a smooth curve between the left keyframe's outgoing value and the
right keyframe's incoming value, using the left's outgoing slope and
acceleration and the right's incoming slope and acceleration."""

:usage: `quintic()` -> float

This function is one of the special animation functions that use the
current playbar time and information in the parameter's keyframes, such
as in and out values, tangents, acceleration, etc., to evaluate
themselves. Because the information needed to evaluate these functions
comes from the keyframes, these functions take few or no parameters.

Calling this function from outside a parameter's expression will raise a
hou.NotAvailable exception.

@related

- [Hom:hou.bezier]
- [Hom:hou.constant]
- [Hom:hou.cubic]
- [Hom:hou.cycle]
- [Hom:hou.cyclet]
- [Hom:hou.ease]
- [Hom:hou.easein]
- [Hom:hou.easeinp]
- [Hom:hou.easeout]
- [Hom:hou.easeoutp]
- [Hom:hou.easep]
- [Hom:hou.linear]
- [Hom:hou.match]
- [Hom:hou.matchin]
- [Hom:hou.matchout]
- [Hom:hou.qlinear]
- [Hom:hou.repeat]
- [Hom:hou.repeatt]
- [Hom:hou.spline]
- [Hom:hou.vmatch]
- [Hom:hou.vmatchin]
- [Hom:hou.vmatchout]

@replaces

- [Exp:quintic]

