= hou.Agent =
#type: homclass
#superclass: hou.PackedPrim
#cppname: HOM_Agent
#group: crowds

"""An agent primitive."""

See [Crowd Agents|/crowds/agents] for more information.

@methods

::`clipCatalog(self)` -> `tuple` of [Hom:hou.AgentClip]:
    #cppname: HOM_Agent::clipCatalog

    Returns all of the animation clips that are available. This is equivalent to `definition().clips()`.

::`clips(self)` -> `tuple` of [Hom:hou.AgentClip]:
    #cppname: HOM_Agent::clips

    Returns the agent's current animation clips.

::`clipTimes(self)` -> `tuple` of `float`:
    #cppname: HOM_Agent::clipTimes

    Returns the current times for the agent's animation clips.

::`clipWeights(self)` -> `tuple` of `float`:
    #cppname: HOM_Agent::clipTimes

    Returns the blend weights for the agent's animation clips.

::`collisionLayer(self)` -> [Hom:hou.AgentLayer]:
    #cppname: HOM_Agent::collisionLayer

    Returns the current collision layer of the agent.

::`currentLayer(self)` -> [Hom:hou.AgentLayer]:
    #cppname: HOM_Agent::currentLayer

    Returns the current display layer of the agent.

::`definition(self)` -> [Hom:hou.AgentDefinition]:
    #cppname: HOM_Agent::definition

    Returns the shared agent definition.

::`layers(self)` -> `tuple` of [Hom:hou.AgentLayer]:
    #cppname: HOM_Agent::layers

    Returns all of the layers that are available. This is equivalent to `definition().layers()`.

::`localTransform(self, transform)` -> [Hom:hou.Matrix4]:
    #cppname: HOM_Agent::localTransform

    Returns the current local space transform of an agent primitive's bone.

    `transform`:
        Index of a transform in the agent's rig.

::`rig(self)` -> [Hom:hou.AgentRig]
    #cppname: HOM_Agent::rig

    Returns the agent's rig. This is equivalent to `definition().rig()`.

::`setClips(clips)`:
    #cppname: HOM_Agent::setClips

    Sets the agent's current animation clips.

    Raises [Hom:hou.GeometryPermissionError] if this geometry is not modifiable.

    `clips`:
        A [Hom:hou.AgentClip] sequence.

::`setClipTimes(times)`:
    #cppname: HOM_Agent::setClipTimes

    Sets the current times for the agent's animation clips.

    Raises [Hom:hou.GeometryPermissionError] if this geometry is not modifiable.

    `times`:
        A `float` sequence.

::`setClipWeights(weights)`:
    #cppname: HOM_Agent::setClipWeights

    Sets the blend weights for the agent's animation clips.

    Raises [Hom:hou.GeometryPermissionError] if this geometry is not modifiable.

    `weights`:
        A `float` sequence.

::`setCurrentLayer(layer)`:
    #cppname: HOM_Agent::setCurrentLayer

    Sets the agent's current display layer.

    Raises [Hom:hou.GeometryPermissionError] if this geometry is not modifiable.

    `layer`:
        A [Hom:hou.AgentLayer].

::`setCollisionLayer(layer)`:
    #cppname: HOM_Agent::setCollisionLayer

    Sets the agent's current collision layer.

    Raises [Hom:hou.GeometryPermissionError] if this geometry is not modifiable.

    `layer`:
        A [Hom:hou.AgentLayer].

::`setDefinition(definition)`:
    #cppname: HOM_Agent::setDefinition

    Changes the agent's definition.
    If the new definition's rig has a different number of transforms, the agent's current transforms will be reset.
    The agent's current clips will be reset if the new definition does not contain clips with the same names.

    Raises [Hom:hou.GeometryPermissionError] if this geometry is not modifiable.

    `definition`:
        A [Hom:hou.AgentDefinition].

::`setLocalTransform(xform, index)`:
    #cppname: HOM_Agent::setLocalTransform

    Sets the current local space transform of an agent primitive's bone.

    Raises [Hom:hou.GeometryPermissionError] if this geometry is not modifiable.

    `xform`:
        A [Hom:hou.Matrix4].
    `index`:
        Index of a transform in the agent's rig.

::`setWorldTransform(xform, index)`:
    #cppname: HOM_Agent::setWorldTransform

    Sets the current world space transform of an agent primitive's bone.

    Raises [Hom:hou.GeometryPermissionError] if this geometry is not modifiable.

    `xform`:
        A [Hom:hou.Matrix4].
    `index`:
        Index of a transform in the agent's rig.

::`shapeLibrary(self)` -> [Hom:hou.AgentShapeLibrary]
    #cppname: HOM_Agent::shapeLibrary

    Returns the agent's shape library. This is equivalent to `definition().shapeLibrary()`.

::`worldTransform(self, transform)` -> [Hom:hou.Matrix4]:
    #cppname: HOM_Agent::worldTransform

    Returns the current world space transform of an agent primitive's bone.

    `transform`:
        Index of a transform in the agent's rig.
