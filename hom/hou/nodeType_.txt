= hou.nodeType =
#type: homfunction
#cppname: hom::nodeType
#group: nodes

"""Given a node type category object and a name, or possibly just a node type
name that includes the category, return the corresponding NodeType object.
The exact name is assumed so node type aliases are not evaluated.  To check aliases
use `hou.preferredNodeType()` instead.
Return None if there is no such type with that name."""

:usage:`nodeType(category, name)` -> NodeType or None

category:
    A [Hom:hou.NodeTypeCategory] object (_not_ a string).
    You can use the `hou.nodeTypeCategories()` function to get a dict
    of category name strings to `NodeTypeCategory` objects.  You can also
    use the helper functions [Hom:hou.sopNodeTypeCategory],
    [Hom:hou.objNodeTypeCategory], etc.

    Note that this parameter is optional.  If omitted, the name parameter must
    contain the node type category.

name:
    The internal name of a node type. To get the internal name of any
    node type in Houdini, right-click a node of that type and choose
    __Type properties__. The internal name is listed at the top of the
    type properties window beside *Operator type*. For example, the
    internal name of the Geometry object is `geo`.

    If the category parameter is omitted, the name must include the category
    name.  For example, you can pass `Object/geo` to get the Geometry object's
    node type.

== Examples ==

{{{
#!pycon
# The following four ways of looking up the copy SOP's node type are equivalent:
>>> hou.nodeType("Sop/copy")
<hou.SopNodeType for Sop copy>

>>> hou.nodeType(hou.sopNodeTypeCategory(), "copy")
<hou.SopNodeType for Sop copy>

>>> hou.sopNodeTypeCategory().nodeTypes()["copy"]
<hou.SopNodeType for Sop copy>

>>> hou.nodeType(hou.nodeTypeCategories()["Sop"], "copy")
<hou.SopNodeType for Sop copy>
}}}

@replaces

- [Cmd:optype]
- [Exp:optype]
- [Exp:optypeinfo]


@related

- [Hom:hou.NodeType]
- [Hom:hou.NodeTypeCategory]
- [Hom:hou.NodeTypeCategory#nodeTypes]
- [Hom:hou.nodeTypeCategories]
- [Hom:hou.preferredNodeType]
