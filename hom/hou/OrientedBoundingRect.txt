= hou.OrientedBoundingRect =
#type: homclass
#cppname: HOM_OrientedBoundingRect
#group: utility

"""An oriented 2D rectangular region."""

Computes an oriented bounding rectangle for a set of points.

@methods

::`__init__(self, points)`:
    #cppname: HOM_OrientedBoundingRect::HOM_OrientedBoundingRect
    Constructs the minimum area oriented bounding rectangle for the given points (a sequence of [Hom:hou.Vector2]).

::`isAlmostEqual(self, brect, tolerance=0.00001)` -> `bool`:
    #cppname: HOM_OrientedBoundingRect::isAlmostEqual
    Returns whether this bounding rectangle is equal to another, subject to numerical tolerances.

::`sizevec(self)` -> [Hom:hou.Vector2]:
    #cppname: HOM_OrientedBoundingRect::sizevec
    Returns a vector describing the size of the box in the `x` and `y` axes.

::`center(self)` -> [Hom:hou.Vector2]:
    #cppname: HOM_OrientedBoundingRect::center
    Returns the position of the center of the bounding rectangle.

::`orientation(self)` -> [Hom:hou.Matrix2]:
    #cppname: HOM_OrientedBoundingRect::orientation
    Returns a [Hom:hou.Matrix2] that defines the orientation of the bounding rectangle.
