= hou.sortedNodes =
#type: homfunction
#cppname: hom::sortedNodes
#group: nodes

"""Given a tuple of [Hom:hou.Node], return a tuple of [Hom:hou.Node] sorted in input/outputs order."""

:usage: `sortedNodePaths(node_tuple)` -> `tuple` of [Hom:hou.Node]

Sorts nodes following the network traversal order. Root nodes appear first and leaf nodes come last.

{{{
#!pycon
>>> hou.node('/obj').createNode('simplefemale')
<hou.ObjNode of type simplefemale at /obj/simplefemale1>
>>> nodes = hou.nodes( ["/obj/simplefemale1/ctrl_master","/obj/simplefemale1/ctrl_IK_wrist_right","/obj/simplefemale1/ctrl_cog","/obj/simplefemale1/ctrl_neck","/obj/simplefemale1/ctrl_head","/obj/simplefemale1/ctrl_FK_hand_right"] )
>>> hou.sortedNodes(nodes)
('/obj/simplefemale1/ctrl_master', '/obj/simplefemale1/ctrl_cog', '/obj/simplefemale1/ctrl_IK_wrist_right', '/obj/simplefemale1/ctrl_neck', '/obj/simplefemale1/ctrl
_head', '/obj/simplefemale1/ctrl_FK_hand_right')
}}}

@related
- [Hom:hou.node_]
- [Hom:hou.nodes]
- [Hom:hou.Node]
- [Hom:hou.sortedNodePaths]

@replaces
- [Exp:oplistsort]


