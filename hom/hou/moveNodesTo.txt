= hou.moveNodesTo =

#type: homfunction
#cppname: hom::moveNodesTo
#group: nodes

"""Move all given nodes to a new place in node hierarchy."""

:usage: `moveNodesTo(nodes, destination_node) -> tuple of Nodes`

The nodes to be moved should be a sequence of hou.Node objects. The
destination node will be the parent of new copied nodes. The type of all
source nodes should match the destination node child type.

This function returns a tuple of hou.Node objects corresponding to the
nodes at their new locations.  If you attempt to access the original
hou.Node objects in the sequence you passed into this function, you will
receive hou.ObjectWasDeleted exceptions.

For every moved node, if a node with the same name already exists at the
destination, the node will be renamed to a unique name.

This function will raise a hou.OperationFailed exception if any of the
nodes to be moved are of invalid type, the destination node cannot be
copied into, or source node type does not match the destination node's
child type.

This function will raise hou.ObjectWasDeleted if any of source nodes or
the destination node no longer exist in Houdini.

All of the above issues with source and destination nodes will be
reported before moving starts to avoid a partial move.

After the function finishes execution, all the moved nodes by it will be
selected.


