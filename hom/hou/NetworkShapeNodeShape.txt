= hou.NetworkShapeNodeShape =
#type: homclass
#cppname: HOM_NetworkShapeNodeShape
#superclass: hou.NetworkShape
#group: ui

"""Describes a node shape that can be drawn into a network editor."""

This subclass of [Hom:hou.NetworkShape] describes a node shape that can be
drawn into a network editor pane. This can draw any of the node shapes
available to the nodes in the network through the Shape Palette.

@methods

::`__init__(self, rect, shape, color = hou.Color((1.0, 1.0, 1.0)), alpha =
1.0, fill = True, screen_space = True, smooth = True)`:
    #cppname: HOM_NetworkShapeNodeShape::HOM_NetworkShapeNodeShape
    Constructs a new node shape descriptor.

    `rect`:
	A [Hom:hou.BoundingRect] object which describes the size and position
	of the box. It may describe the box in screen space or in the network
	layout space, depending on the value of the `screen_space` parameter.
	This is the only required parameter.

    `shape`:
	A string holding the name of the node shape to draw. The list of
	available node shapes can be retrieved with the
	[Hom:hou.NetworkEditor#nodeShapes] method.

    `color`:
	The color of the node shape, expressed as a [Hom:hou.Color].

    `alpha`:
	The alpha used when drawing the node shape, expressed as a float value
	between 0 and 1.

    `fill`:
	A boolean value indicating whether the node shape should be filled, or
	just drawn as an outline.

    `screen_space`:
	A boolean value indicating whether the `rect` parameter describes the
	node shape size and position in screen space or network layout space.
	If set to `True`, the bounds are expressed as pixels relative to the
	lower left corner of the pane. If `False`, the bounds are expressed in
	network units.

    `smooth`:
	A boolean value indicating whether lines should be drawn with
	smoothing turned on. Smoothing lines is a form of anti-aliasing which
	can make curved lines look better, but doing so may affect the color
	of the line. This parameter has no effect if `fill` is `True`.

