= hou.audio =
#type: hommodule
#cppname: HOM_audio
#group: general

"""Functions related to playing audio using Houdini's playbar."""

@functions

::`setAudioFileName(path)`:
    #cppname: HOM_audio::setAudioFileName
    Set the Audio Panel to play the sound inside an audio file.  Houdini plays
    this sound during testing, animation or scrubbing.  See also
    [Hom:hou.audio#useAudioFile].

::`setChopPath(path)`:
    #cppname: HOM_audio::setChopPath
    Set the Audio Panel to play the sound inside a CHOP node.  Houdini plays
    this sound during testing, animation or scrubbing.  See also
    [Hom:hou.audio#useChops].

    path:
	A string containing the path to the CHOP node.

::`useAudioFile()`:
    #cppname: HOM_audio::useAudioFile
    Set the Audio Panel to use a disk file for the audio.

::`useChops()`:
    #cppname: HOM_audio::useChops
    Set the Audio Panel to use a CHOP node for the audio.

::`setMono(on)`:
    #cppname: HOM_audio::setMono
    Set whether the audio will play in mono or stereo mode.

::`setLeftVolume(value)`:
    #cppname: HOM_audio::setLeftVolume
    Set the volume for the left audio channel.

::`setRightVolume(value)`:
    #cppname: HOM_audio::setRightVolume
    Set the volume for the right channel.

::`setVolumeTied(self, on)`:
    #cppname: HOM_audio::setVolumeTied
    Set whether changing the volume of one channel affects the volume of the
    other channel. If so, both channels will have the same volume set.

::`setMeter(on)`:
    #cppname: HOM_audio::setMeter
    Ses whether the meter will show the volume levels during the audio
    playback.

::`setAudioOffset(offset)`:
    #cppname: HOM_audio::setAudioOffset
    Set the time offset of the sound to sync the audio.  This offset,
    specified in seconds, will coincide with the audio frame.  See also
    [Hom:hou.audio#setAudioFrame].

::`setAudioFrame(frame)`:
    #cppname: HOM_audio::setAudioFrame
    Set the frame to sync the audio. The audio offset (in seconds) will
    coincide with this frame.  See also [Hom:hou.audio#setAudioOffset].

::`useTestMode()`:
    #cppname: HOM_audio::useTestMode
    Put the Audio Panel into a mode that tests the audio playback.

    When the Audio Panel is in the test mode, it will play the entire audio
    soundtrack. The test can be stopped and resumed with stop() and play()
    functions. 
    
    The sound will not play when scrubbing the thumb in the playbar or when
    playing the animation in the playbar. The audio must be in either scrub or
    realtime mode for playing the sound during animation or scrubbing.

::`useTimeLineMode()`:
    #cppname: HOM_audio::useTimeLineMode
    Put the Audio Panel into a scrub mode.

    When the Audio Panel is in the scrub (a.k.a. timeline) mode, Houdini will
    play the audio during the animation or when scrubbing the thumb in the
    playbar.

::`useTimeSliceMode()`:
    #cppname: HOM_audio::useTimeSliceMode
    Put the Audio Panel into realtime (a.k.a. timeslice) mode.

::`turnOffAudio()`:
    #cppname: HOM_audio::turnOffAudio
    Turn off the audio playback.

::`play()`:
    #cppname: HOM_audio::play
    When the Audio Panel is in the test mode, start playing the Audio Panel's
    specified audio file or CHOP.  See also [Hom:hou.audio#setAudioFileName]
    and [Hom:hou.audio#setChopPath].

::`stop()`:
    #cppname: HOM_audio::stop
    When the Audio Panel is in the test mode, stop the test playback if any
    audio is currently playing.

::`reverse()`:
    #cppname: HOM_audio::reverse
    When the Audio Panel is in the test mode, start playing the sound in
    reverse.

::`setLooping(on)`:
    #cppname: HOM_audio::setLooping
    When the Audio Panel is in the test mode, set whether the test should start
    playing from the beginning once the end is reached.  See also
    [Hom:hou.audio#setRewind].

::`setRewind(on)`:
    #cppname: HOM_audio::setRewind
    When the Audio Panel is in the test mode, set whether the sound should
    rewind to the beginning when the test is stopped. If not, on subsequent
    start, the sound will resume from the point at which it was previously
    stopped.  See also [Hom:hou.audio#setLooping].

::`setScrubRate(value)`:
    #cppname: HOM_audio::setScrubRate
    When the sustain period is non-zero, the small chunk of the sound will be
    repeated with this frequency when the scrubbing comes to a standstill at a
    single frame.  See also [Hom:hou.audio#useTimeSliceMode].

::`setScrubRepeat(on)`:
    #cppname: HOM_audio::setScrubRepeat
    Set whether the sound chunk is repeated during scrubbing.  See also
    [Hom:hou.audio#useTimeSliceMode].

::`setScrubSustain(value)`:
    #cppname: HOM_audio::setScrubSustain
    Set the length of time the that the sound chunk is repeatedly played when
    scrubbing comes to a standstill on a particular single frame. In practice,
    when the value is zero, no sound will be played when scrubbing keeps
    hovering over one frame.  But, when the value is non-zero, a small sound
    chunk will keep playing repeatedly with a specified frequency.  See also
    [Hom:hou.audio#useTimeSliceMode].

@replaces

- [Cmd:audiopanel]
