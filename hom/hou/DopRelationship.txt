= hou.DopRelationship =
#type: homclass
#cppname: HOM_DopRelationship
#superclass: hou.DopData
#group: dynamics

"""A type of DOP data that stores which DOP objects affect one another."""

In addition to the "Basic" and "Options" records, a DopRelationship contains
"ObjInAffectors" and "ObjInGroup" records.  The former contains the objects
doing the affecting and the latter contains the objects being affected.

See [Hom:hou.DopSimulation#relationships] for an example.

@methods

::`name(self)` -> `str`:
    #cppname: HOM_DopRelationship::name
    Return the name of this DOP relationship.

::`matches(self, pattern)` -> `bool`:
    #cppname: HOM_DopRelationship::matches
    Return whether or not this relationship's name matches a pattern.  See
    [Hom:hou.DopObject#matches] for more information.

::`setGroup(self, objects)`:
    #cppname: HOM_DopRelationship::setGroup
    Sets the list of objects that are being affected. This corresponds to the
    "ObjInGroup" record.

    `objects`: A list of DOP objects.

    Raises [Hom:hou.PermissionError] if called from outside a Python DOP.

::`setAffectorGroup(self, objects)`:
    #cppname: HOM_DopRelationship::setAffectorGroup
    Sets the list of objects that are doing the affecting. This corresponds to
    the "ObjInAffectors" record.

    `objects`: A list of DOP objects.

    Raises [Hom:hou.PermissionError] if called from outside a Python DOP.
