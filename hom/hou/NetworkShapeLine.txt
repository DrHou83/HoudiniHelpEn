= hou.NetworkShapeLine =
#type: homclass
#cppname: HOM_NetworkShapeLine
#superclass: hou.NetworkShape
#group: ui

"""Describes a line that can be drawn into a network editor."""

This subclass of [Hom:hou.NetworkShape] describes a line that can be
drawn into a network editor pane.

@methods

::`__init__(self, start, end, color = hou.Color((1.0, 1.0, 1.0)), alpha = 1.0, width = 1.0, screen_space = True, smooth = True, dashed = False)`:
    #cppname: HOM_NetworkShapeLine::HOM_NetworkShapeLine
    Constructs a new line descriptor.

    `start`:
	A [Hom:hou.Vector2] indicating the starting point of the line. May be
	in screen space or network units depending on the value of the
	`screen_space` parameter.

    `end`:
	A [Hom:hou.Vector2] indicating the ending point of the line. May be
	in screen space or network units depending on the value of the
	`screen_space` parameter.

    `color`:
	The color of the line, expressed as a [Hom:hou.Color].

    `alpha`:
	The alpha used when drawing the line, expressed as a float value
	between 0 and 1.

    `width`:
	A float value indicating the width of the line. This value is always
	expressed in pixels, regardless of the value of the `screen_space`
	parameter.

    `screen_space`:
	A boolean value indicating whether the `start` and `end` parameters
	are expressed in screen space or network layout space. If set
	to `True`, the positions are expressed as pixels relative to the lower
	left corner of the pane. If `False`, the positions are expressed in
	network units.

    `smooth`:
	A boolean value indicating whether lines should be drawn with
	smoothing turned on. Smoothing lines is a form of anti-aliasing which
	can make curved lines look better, but doing so may affect the color
	of the line.

    `dashed`:
	A boolean value indicating whether lines should be drawn as a series
	of dashes rather than as solid lines.

