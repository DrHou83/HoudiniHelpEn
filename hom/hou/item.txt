= hou.item =
#type: homfunction
#cppname: hom::item
#group: nodes

"""Given a path string, return a NetworkMovableItem object.  Return None if
the path does not refer to an item."""

:usage: `item(path)` -> [Hom:hou.NetworkMovableItem] or `None`

If the path starts with a `/`, Houdini will look for an item with that exact
path.  Otherwise, the Houdini searches relative to the current path.
See [Hom:hou.pwd] for more information about Houdini's current path.  For each
occurrence of `..` in the path, Houdini will move up one item from the current
location.

This method is a more general form of the [Hom:hou.node_] method, which will
only return [Hom:hou.Node] objects. But some network item types
([Hom:hou.SubnetIndirectInput] and [Hom:hou.NetworkDot]) do not have names,
and so will never be returned by this method.

Raises [Hom:hou.NotAvailable] if you call it from MPlay.

{{{
#!pycon
>>> hou.item("/obj")
<hou.Node at /obj>
>>> hou.item("/obj").createNetworkBox()
<hou.NetworkBox at /obj/__netbox1>
>>> hou.item("/obj/__netbox1")
<hou.NetworkBox at /obj/__netbox1>
>>> hou.cd("/obj")
>>> hou.item("__netbox1")
<hou.NetworkBox at /obj/__netbox1>
>>> print hou.item("__netbox2")
None
}}}

@related
- [Hom:hou.node_]
- [Hom:hou.nodes]
- [Hom:hou.items]
- [Hom:hou.pwd]
- [Hom:hou.parent]
- [Hom:hou.root]

