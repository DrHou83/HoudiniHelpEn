= hou.Track =
#type: homclass
#cppname: HOM_Track
#group: channels

Each [Hom:hou.ChopNode] contains its data in one or more tracks.
A track contains a sequence of floating point samples over time.
Each track has a unique name in its containing CHOP.

@methods

::`allSamples(self)` -> tuple of `double`:
    #cppname: HOM_Track::allSamples

    Returns all the sample values in this track.

::`chopNode(self)` -> [Hom:hou.ChopNode]:
    #cppname: HOM_Track::chopNode

    Returns the [Hom:hou.ChopNode] owner of this track.

::`eval(self)` -> `double`:
    #cppname: HOM_Track::eval

    Returns the value of this track at the current time.

::`evalAtFrame(self, frame)` -> `double`:
    #cppname: HOM_Track::evalAtFrame

    Returns the value of this track at a given frame.

::`evalAtSample(self, sample)` -> `double`:
    #cppname: HOM_Track::evalAtSample

    Returns the value of the track at a given sample value.

::`evalAtSampleIndex(self, index)` -> `double`:
    #cppname: HOM_Track::evalAtSampleIndex

    This method is deprecated in favor of `evalAtSample`.
    
::`evalAtTime(self, time)` -> `double`:
    #cppname: HOM_Track::evalAtTime

    Returns the value of this track at a given time.

::`evalAtFrameRange(self, start, end)` -> tuple of `double`:
    #cppname: HOM_Track::evalAtFrameRange

    Returns the sample values of this track between a given start and end frame.

::`evalAtSampleRange(self, start, end)` -> tuple of `double`:
    #cppname: HOM_Track::evalAtSampleRange

    Returns the sample values of this track between a given start and end sample index.

::`evalAtTimeRange(self, start, end)` -> tuple of `double`:
    #cppname: HOM_Track::evalAtTimeRange

    Returns the sample values of this track between a given start and end time.

::`name(self)` -> `str`:
    #cppname: HOM_Track::name

    Returns the name of this track (each track in a CHOP has a unique name).

::`numSamples(self)` -> `int`:
    #cppname: HOM_Track::numSamples

    Return the number of samples in this track.

@replaces

- [Exp:chop]
- [Exp:chopcf]
- [Exp:chopci]
- [Exp:chopct]
- [Exp:chopf]
- [Exp:chopi]
- [Exp:chopl]
- [Exp:chopstr]
- [Exp:chopt]






