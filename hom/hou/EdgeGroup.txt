= hou.EdgeGroup =
#type: homclass
#cppname: HOM_EdgeGroup
#group: geo

"""A named group of edges inside a Geometry object."""

Edge groups reside inside the geometry, and each edge group has a unique name.

See [Hom:hou.Edge] for more information about edges.  See also
[Hom:hou.PrimGroup] and [Hom:hou.PointGroup].

@methods

::`name(self)`:
    #cppname: HOM_EdgeGroup::name
    Return the name of the group.  Each edge group has a unique name.

::`geometry(self)` -> [Hom:hou.Geometry]:
    #cppname: HOM_EdgeGroup::geometry
    Return the geometry object containing this group.

::`edges(self)` -> `tuple` of [Hom:hou.Edge]:
    #cppname: HOM_EdgeGroup::edges
    Return the contents of this group.

::`contains(self, edge)` -> `bool`:
    #cppname: HOM_EdgeGroup::contains
    Return whether or not an edge is in this group.

    Raises [Hom:hou.OperationFailed] if the edge belongs to a different
    geometry object than this group.

::`add(self, edge_or_list_or_edge_group)`:
    #cppname: HOM_EdgeGroup::add
    If given a [Hom:hou.Edge] or a list of [Hom:hou.Edge]'s, add the edge(s) to
    the group.  If given a [Hom:hou.EdgeGroup], merge the contents of the other
    edge group with this group (the other group is unaffected).  You would
    typically call this method from the code of a Python-defined SOP.

    It is ok to add edges to the group that were already in the group.

    Raises [Hom:hou.GeometryPermissionError] if this geometry is not modifiable.

    Raises [Hom:hou.OperationFailed] if the edge or edge group belong to a
    different geometry object than this group.

::`remove(self, edge_or_list_or_edge_group)`:
    #cppname: HOM_EdgeGroup::remove
    If given a [Hom:hou.Edge] or a list of [Hom:hou.Edge]'s, remove the edge(s)
    from the group.  If given a [Hom:hou.EdgeGroup], remove all edges in the
    other group from this group (the other group is unaffected).  You would
    typically call this method from the code of a Python-defined SOP.

    It is not an error to try to remove an edge from the group that wasn't
    already in the group.

    Raises [Hom:hou.GeometryPermissionError] if this geometry is not modifiable.

    Raises [Hom:hou.OperationFailed] if the edge belongs to a different
    geometry object than this group.

::`clear(self)`:
    #cppname: HOM_PointGroup::clear
    Remove all edges from this group.  You would typically call this method
    from the code of a Python-defined SOP.
    
    The edges remain in the geometry; only the group is affected.

    Raises [Hom:hou.GeometryPermissionError] if this geometry is not modifiable.

::`destroy(self)`:
    #cppname: HOM_EdgeGroup::destroy
    Remove this group from the geometry.  You would typically call this method
    from the code of a Python-defined SOP.
    
    Raises [Hom:hou.GeometryPermissionError] if this geometry is not modifiable.


@replaces

