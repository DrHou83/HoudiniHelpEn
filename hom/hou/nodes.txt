= hou.nodes =
#type: homfunction
#cppname: hom::nodes
#group: nodes

"""Takes a sequence of node path strings and returns a tuple of Node objects."""

:usage: `nodes(path_tuple)` -> `tuple` of [Hom:hou.Node]

This is like [Hom:hou.node_] but takes multiple paths and returns multiple node objects. See [Hom:hou.node_] for more information.

{{{
paths = ["/obj/geo1", "/obj/geo2", "/obj/geo3"]
nodes = hou.nodes(paths)
}}}

This is the equivalent of:

{{{
nodes = [hou.node(path) for path in paths]
}}}


@related
- [Hom:hou.item]
- [Hom:hou.items]
- [Hom:hou.node_]
- [Hom:hou.pwd]
- [Hom:hou.parent]
- [Hom:hou.root]

@replaces
- [Cmd:opfind]
- [Exp:ch]
- [Exp:chs]
- [Exp:chsop]
- [Exp:opexist]


