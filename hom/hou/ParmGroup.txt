= hou.ParmGroup =
#type: homclass
#cppname: HOM_ParmGroup
#group: parms
#status: ni

@methods

::`addChildGroup(self, group_name)`:
    #cppname: HOM_ParmGroup::addChildGroup
    #status: ni

::`addNodesParms(self, node)`:
    #cppname: HOM_ParmGroup::addNodesParms
    #status: ni

::`addParm(self, parm)`:
    #cppname: HOM_ParmGroup::addParm
    #status: ni

::`allParms(self)` -> tuple of Parms:
    #cppname: HOM_ParmGroup::allParms
    #status: ni

::`asCode(self)`:
    #cppname: HOM_ParmGroup::asCode
    #status: ni

::`childGroups(self)` -> tuple of ParmGroups:
    #cppname: HOM_ParmGroup::childGroups
    #status: ni

::`clear(self)`:
    #cppname: HOM_ParmGroup::clear
    #status: ni

::`moveToNextKeyInGroup(self)`:
    #cppname: HOM_ParmGroup::moveToNextKeyInGroup
    #status: ni

::`moveToPreviousKeyInGroup(self)`:
    #cppname: HOM_ParmGroup::moveToPreviousKeyInGroup
    #status: ni

::`onlyTopLevelParms(self)` -> tuple of Parms:
    #cppname: HOM_ParmGroup::onlyTopLevelParms
    #status: ni

::`removeChildGroup(self, group_name)`:
    #cppname: HOM_ParmGroup::removeChildGroup
    #status: ni

::`removeParm(self, parm)`:
    #cppname: HOM_ParmGroup::removeParm
    #status: ni

@replaces

- [Cmd:chgadd]
- [Cmd:chgls]
- [Cmd:chgop]
- [Cmd:chgpopulate]
- [Cmd:chgrm]
- [Cmd:nextkey]
- [Exp:chgroup]




