#type: hscript

= sopcache =

"""Manipulates the internal surface node cache."""

:usage: `sopcache [-q|-v] [-c] [-l] [-L] [-s] [-m <<memory>>] [-M never|always] [-U never|flag|always] [-W <<name>> never|always <<depth>>] [-w <<name>>]`

@options

`-q`:
    Quiet mode. The command will be performed with no output.
    
`-v`:
    Verbose mode. Extra information will be output.
    
`-c`:
    Clear the SOP cache. Every loaded SOP will attempt to unload 
    itself. They may not unload if the SOP is currently in use (e.g.
    displayed).
    
`-l`:
    Print the cache status. This displays the current estimated
    memory use by SOPs and the number of SOPs that have active data.
    
`-L`:
    Print the full path of all active SOPs. If verbose mode is also
    set with -v, the memory size of each SOP will also be output.
    The SOPs will then be sorted by memory usage.
    
`-s`:
    Print the current settings.
    
`-m <<memory>> `:
    Set the maximum memory limit (used by -M)
    
`-M never|always`:
    Unload cache on reaching the memory limit (-m) (never = ignore
    memory limit, always = unload when limit reached).
    
`-U never|flag|always`:
    Unload surface operators (never = do not unload surface
    operators, flag = unload if operator's unload flag is set,
    always = unload all operators regardless of unload flag).
    
`-W <<name>> never|always <<depth>>`:
    Sets the cache behavior for nodes after <<depth>> number of 
    <<name>> checkpoints in the cache list.
    
    When SOPs are accessed their timestamp is updated and they are 
    moved to the front of the cache list.
    
    You can insert "checkpoint" markers into the cache list to mark 
    recurring events using the `-w` option (for example, you could 
    insert a `newframe` checkpoint at each new frame using
    `sopcache -w newframe`).
    
    Before inserting checkpoints, you would run, for example, 
    `sopcache -W newframe always 4` to specify the behavior of 
    `newframe` checkpoints. In this case, Houdini would unload any 
    nodes following the fourth `newframe` checkpoint in the cache 
    list. In other words, any nodes that haven't been accessed in the 
    last four frames.
    
`-w <<name>> `:
    Inserts a "checkpoint" of the given name in the cache list. See the `-W` option above for 

@related

- [texcache|Cmd:texcache]
- [geocache|Cmd:geocache]
- [objcache|Cmd:objcache]
- [opunload|Cmd:opunload]


