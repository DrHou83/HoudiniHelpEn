#type: hscript

= chkey =

"""Edits or inserts a key."""

:usage: `chkey [-f <<frame>>] [-t <<time>>] [-v <<lvalue>>] [-m <<lslope>>] [-a <<laccel>>] [-V <<rvalue>>] [-M <<rslope>>] [-A <<raccel>>] [-T <<tielist>>] [-F <<function>>] [-o <<autolist>>] <<channel_patterns>> `

If a key exists at the frame/time specified, then the values for that
key will be modified. Otherwise a key will be set.

If both the left and right values are specified, the key will be untied
at the point and the values altered independently. Otherwise, the effect
depends on the tied state of the key.

The channel pattern specifies which channels will be affected by the
command.

NOTE:
    The expression function should usually be protected by '' to prevent
    any expansion of its contents. In the first example, the () would be
    expanded to give a syntax error on the command.



@options
    `-v <<lvalue>> `:
        The value entering the key.
    `-m <<lslope>> `:
        The slope entering the key.
    `-a <<laccel>> `:
        The acceleration entering the key.
    `-V <<lvalue>> `:
        The value leaving the key.
    `-M <<lslope>> `:
        The slope leaving the key.
    `-A <<laccel>> `:
        The acceleration leaving the key.
    `-T <<tielist>> `:
        Ties the options specified in the <<tielist>>, which is a list
        of characters ("amvAMV") corresponding to the accel, slope, and
        value in and out options. Both the right and left settings will
        be locked together.
    `-F <<function>> `:
        The expression function for the segment following the key.
    `-o <<autolist>> `:
        Sets the automatic flag on the options specified in the
        <<autolist>>, which is a list of characters ("amvAMV") 
        corresponding to the accel, slope, and value in and out options.

@examples
    {{{
    #!hscript
    chkey -f 1 -v 3 -F 'cubic()' geo*/t?
    }}}
    Sets the value to 3 and expression function to cubic() for all
    channels matching geo*/t?.


