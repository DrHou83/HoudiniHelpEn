#type: hscript

= otcontentadd =

"""Adds a file to an existing operator type definition."""

:usage: `otcontentadd [-l <<source_otl>>] <<table>>/<<operator>> <<section>> <<file>> `

The <<table>> value specifies the class of the operator you want to
modify. A list of valid table names is found in the help for the otwrite
command. The <<operator>> value is the name of the specific operator
type.

The <<section>> name is the name to use for the file inside the type
definition. The <<file>> is the name of the file on disk to copy into
the operator definition.

To access the data stored inside an operator definition, use a string
like "opdef:/<<table>>/<<operator>>?<<section>>". You can use this type
of string anywhere Houdini accepts a file name.

To get a list of all data sections that exist in an operator definition,
use the otcontentls command. Use otcontentdelete to remove a data
section from an operator definition.

@options
    `-l <<source_otl>> `:
        The library in which to modify the operator type. If you don't
        specify a <<source_otl>>, the command uses the current
        definition for the operator.

@related
    - [otcontentdelete|Cmd:otcontentdelete]
    - [otcontentls|Cmd:otcontentls]
    - [otcontentsave|Cmd:otcontentsave]
    - [otwrite|Cmd:otwrite]

