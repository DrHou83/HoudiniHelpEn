#type: hscript

= opcomment =

"""Gets or sets a comment string for an operator."""

:usage: `opcomment [-a] [-c <<comment_string>>] <<node>> [<<node2>> ...]`

If you don't specify a comment string with -c, prints the node's current
comment.

You can specify multiple nodes. `opcomment` will assign/append the
comment string to all of them.



@options
    `-a`:
        Appends to the existing comment instead of replacing it.

    `-c <<comment_string>>`:
        The string to set the comment to. If you omit this option,
        `opcomment` prints the node's current comment.


@examples
    {{{
    #!hscript
    opcomment /obj/model1
    }}}
    Print the comment attached to `/obj/model1`.

    {{{
    #!hscript
    opcomment -c "Delete this once the real geometry is done" /obj/model1
    }}}
    Attach a comment to `/obj/model1`.

    {{{
    #!hscript
    opcomment -a -c " (Touched by matt 24-Dec-06)" /obj/model1
    }}}
    Add text to the existing comment on `/obj/model1`.


