#type: hscript

= oplegacyinputs =

"""Specifies input names for legacy nodes that were saved only with input numbers."""

:usage: `oplegacyinputs [-q] <<networktype>> <<nodename>> [<<inputname>> ...]`

This defines the input names of an operator as it appeared in Houdini 11.1
or earlier. In these Houdini versions, the operators used input numbers 
instead of input names, so it impossible to rearrange the inputs without
breaking the backwards compatibility with old hip files. Newer Houdini versions
use input names for operators, which allows them to move the inputs around
or to insert new inputs between the old ones, all without
breaking backwards compatibility. However, the hip files saved in Houdini
11.1 or earlier are still affected by such changes, since they saved only
indices and not names. The index specifies that a given wire should be 
connected to an input at a given index, but now there may be a new input with a
new semantics at that index.  That's where this command comes in handy.
It assigns names to the input indices for operators available in Houdini 11.1.
Then, this input name map is used in newer Houdini versions to resolve (remap)
the old input indices to new input names in a new versions of an operator,
thus making it possible to load old hip files and connect the old wires 
to correct inputs.

@options
    `-q`:
        (Quiet) Don't print any errors about unknown operators, etc.

@examples
{{{
#!hscript
oplegacyinputs Vop align from to
}}}

Specifies that the first input of the [Align VOP node|Node:vop/align] 
is named `align` and the second one is `to`. This allows loading old hip files
that make input connections using input numbers to load in newer Houdini
versions where the [Align VOP|Node:vop/align] inputs may have been rearranged or new inputs 
added at the beginning (e.g., at index 0, thus replacing the semantics of the
old input at that index).


