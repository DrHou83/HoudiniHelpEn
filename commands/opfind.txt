#type: hscript

= opfind =

"""Find operators that match a set of criteria."""

:usage: `opfind [-t <<type_pattern>>] [-T <<network_type>>] [-n <<name_pattern>>] [-N <<fullpath_pattern>>] [-p <<path>>] [-s] [-i [-w]] <<pattern>> `

Prints the full path of all operators that match all given search
criteria.

@options
    `-t <<type_pattern>> `:
        Find operators whose type matches <<type_pattern>>.
    `-T <<network>> `:
        Find operators of <<network_type>> (see optype for information
        on network types).
    `-n <<name_pattern>> `:
        Find operators with names matching <<name_pattern>>.
    `-N <<fullpath_pattern>> `:
        Find operators with full paths matching <<fullpath_pattern>>.
    `-p <<path>> `:
        Start searching from this path in the operator hierarchy. If you
        don't specify a path, the search begins at the root (/).
    ` <<pattern>> `:
        Find operators with parameter values matching <<pattern>>
    `-s`:
        Causes this command to search only one network, and not recurse
        into child networks. Also, this option changes the output of
        this command to only show the node name rather than the full
        path of the node
    `-S`:
        Causes this command to search only one network, and not recurse
        into child networks. Unlike -s, this option shows the full path
        of the node.
    `-i`:
        Normally, <<pattern>> only matches whole words (for example,
        pattern "myobj" would not match value "myobj1". You can use the
        -i flag to make the pattern match word substrings.
    `-w`:
        If you specified -i (substring parameter search), you also
        specify -w to allow wildcard matches (? and *) in the parameter
        search.

@examples
    {{{
    #!hscript
    opfind light1
    }}}
    Find all expression referencing light1

    {{{
    #!hscript
    opfind -n light
    }}}
    Find all ops named light

    {{{
    #!hscript
    opfind -T SHOP
    }}}
    Find all SHOPs.

    {{{
    #!hscript
    opfind -t light
    }}}
    Find all ops of type light

    {{{
    #!hscript
    opfind -p /obj
    }}}
    Find all ops under /obj.

    {{{
    #!hscript
    opfind -s -t light
    }}}
    Find all the lights in the current net


@related
    - [opchange|Cmd:opchange]
    - [optype|Cmd:optype]
    - [opglob|Cmd:opglob]

