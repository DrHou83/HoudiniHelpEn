= objmaterial =

#type: hscript

"""Manages object-local overrides of material parameters."""

This is basically the scripting equivalent of the __Material Override__ menu in the parameter editor for objects. It allows you to create parameters on an object that override the equivalent values on the object's material.

:usage: `objmaterial <<object_path>> <<operation>> [<<parameters>>]`

@options

Operations:
    `override`:
        Create parameters on the object to override _all_ material parameters.
    
    `select`:
        Select and create object parameters to override material parameters.
    
    `remove`:
        Removes _all_ object parameter overrides.
    
    `rmdefault`:
        Removes any unchanged object parameters (that is, that are currently set to their default value).
    
    `sync`:
        Synchronize the object parameter overrides with the parameter definitions on the material.
    
    `revert`:
        Revert any parameter overrides on the object to their values on the material.
    
    `addlist`:
        (Followed by a space separated list of parameter names.) Creates object parameters to override the named parameters on the material.

@examples

{{{
#!hscript

# Add all material overrides
objmaterial geo1 override

# Remove all material overrides
objmaterial geo1 remove

# Add specific overrides for "baseColor" and "roughness" parameters
objmaterial geo1 addlist baseColor roughness
}}}
