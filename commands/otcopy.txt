#type: hscript

= otcopy =

"""Copies data from inside one HDA file to another."""

:usage: `otcopy [-v] [-l <<source_hda>>] [-n <<new_name>>] [-e <<new_label>>] <<table>>/<<operator>> [<<table>>/<<operator>> ...] <<to_hda_file>> `

You can use this function for archiving operator types, or updating an
operator definition in one library from a definition in another
library.

The <<table>> value specifies the class of the operator you want to
modify. A list of valid table names is found in the help for the otwrite
command. The <<operator>> value is the name of the specific operator
type. Either or both or the <<table>> and <<operator>> values can
contain wild card characters. Any number of <<table>>/<<operator>> pairs
can be specified.

The <<to_hda_file>> value specifies the name of the operator type
library file to which the data should be copied. If a definition for the
specified operator already exists in the destination file, it is
overwritten.

NOTE:
    You can use the `otmerge` command to copy all the operator types from
    one library into another with a single command.

@options
    `-v`:
        Outputs the name of each operator type that is copied to the new
        file.
    `-l <<source_hda>> `:
        The library in which to find the operator type. If you don't
        specify a <<source_hda>>, the command uses the current
        definition for the operator.
    `-n <<new_name>> `:
        Specify a new name for the copied operator type. This lets you
        create a new operator type using an existing type as a starting
        point.
    `-e <<new_label>> `:
        Specify a new description for the operator type. If you use the
        -e option without the -n option, the new operator type
        definition will still conflict with the existing definition.

@examples
    {{{
    #!hscript
    otcopy -l $HH/hda/OPlibShop.hda Shop/v_clay $HOME/OPcustom.hda
    }}}
    Copies the Shop/v_clay definition from `$HH/hda/OPlibShop.hda` into
    `$HOME/OPcustom.hda`.

    {{{
    #!hscript
    otcopy -n v_newclay -e "My Clay" Shop/v_clay $HOME/OPcustom.hda
    }}}
    Copies the current Shop/v_clay definition to `$HOME/OPcustom.hda`, but
    renames it to Shop/v_newclay, with the label "New Clay".


@related
    - [otdelete|Cmd:otdelete]
    - [otedit|Cmd:otedit]
    - [otmerge|Cmd:otmerge]
    - [otwrite|Cmd:otwrite]

