#type: hscript

= chopscope =

"""Assigns CHOP channels to available viewers by pairing CHOP paths with
CHOP channels."""

:usage: `chopscope [<<viewer_path>> <<channel_patterns>>] `

The viewer path is specified by the full path of the CHOPNet it is
looking at, plus the node(s) you want to scope. The channels are
specified exactly or using wildcards. The first three examples scope
channels into one CHOP viewer. The last example scopes two CHOPNets into
two viewers; the ch1/wave1 channels into one viewer and the ch2/noise1
channels into another viewer, creating a floating window if two CHOP
viewers are not currently visible.

NOTE:
    You always need to provide a CHOP node / channel list pair.



@examples
    {{{
    #!hscript
    chopscope /ch/ch1/wave1 chan1
    }}}
    
    {{{
    #!hscript
    chopscope /ch/ch1/noise1 t[xyz]
    }}}
    
    {{{
    #!hscript
    chopscope /ch/ch1/wave1 chan1 /ch/ch1/noise1 t[xyz]
    }}}
    
    {{{
    #!hscript
    chopscope /ch/ch1/wave1 t[xyz] /ch/ch2/noise1 t[xyz]
    }}}

