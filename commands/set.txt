#type: hscript

= set =

"""Sets a local variable."""

:usage: `set [-g] <<name>> = <<value>> `
:usage: `set -u <<name>> `
:usage: `set -p <<name>> = <<value>> `
:usage: `set [-s]`

Without any arguments, the command prints a list of current local
variables (see the -s option).

@options
    `-g`:
        Make the variable global.
    `-u`:
        Unset the variable.
    `-p`:
        Set the variable in the calling (parent) script. This option
        lets you return values from within sourced scripts, by directly
        setting a variable in the caller.
    `-s`:
        Without any other arguments, prints the current variables in the
        form of commands.

@examples
    {{{
    #!hscript
    set num = 1234
    echo $num
    }}}
    
    Prints 1234.
    
    {{{
    #!hscript
    set nodes = `run("ls")`
    }}}
    
    Sets `$nodes` to the result of the `ls` command.

@related
    - [setenv|Cmd:setenv]

