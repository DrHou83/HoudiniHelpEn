= adddetailattrib =

#type: vex
#context: all
#tags: attrib, detail
#group: attrib

"""Adds a detail attribute to a geometry."""

If you don't know the class of attribute until runtime, use [Vex:addattrib].

:usage: `int adddetailattrib(int geohandle, string name, <type> defvalue)`
:usage: `int adddetailattrib(int geohandle, string name, <type> defvalue[])`

    Adds a detail attribute to the given geometry.

:usage: `int adddetailattrib(int geohandle, string name, <type> defvalue, string typeinfo)`
:usage: `int adddetailattrib(int geohandle, string name, <type> defvalue[], string typeinfo)`

    Adds a detail attribute with the given transformation info. See [Vex:attribtypeinfo] for more details.

:box:
    #id: info
    
    [Include:_common#geohandle_arg]

    :arg:name:
        The name of the attribute to create.

    :arg:defvalue:
        The default value for the attribute and determines the type of attribute to create.  String and array attributes cannot have defaults, so only the type is used in those cases.
    
    :returns:
        `geohandle` on success, or `-1` on failure.
    
    * If an attribute of the same name already exists, the function will try to convert it to the new type.


@related

- [Vex:addattrib]
- [Vex:addprimattrib]
- [Vex:addpointattrib]
- [Vex:addvertexattrib]
