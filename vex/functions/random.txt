= random =

#type: vex
#context: all
#tags: random
#group: noise

"""Generate a random number based on the position in 1-4D space."""

:usage: `float random(int|float position)`
:usage: `vector random(int|float position)`
:usage: `vector2 random(int position)`
:usage: `vector4 random(int|float position)`

    Generate 1D, 2D, 3D, or 4D noise based on a 1D position.

:usage: `float random(int|float xpos, int|float ypos)`
:usage: `vector random(int|float xpos, int|float ypos)`
:usage: `vector4 random(int|float xpos, int|float ypos)`

    Specify a 2D position in the noise field using two numbers.

:usage: `float random(vector position)`
:usage: `vector random(vector position)`
:usage: `vector4 random(vector position)`

    Specify a 3D position in the noise field using a vector.

:usage: `float random(vector4 position)`
:usage: `vector random(vector4 position)`
:usage: `vector4 random(vector4 position)`
    
    Specify a 4D position in the noise field using a vector4.

Generate a random number based on the position in N dimensional space
(where N is 1 to 4 dimensions). Unlike the noise functions, the random
functions do not smoothly interpolate the random values between integer
lattice points. The random() functions are very efficient ways of doing
something like `noise(floor(position))`.
