= reorder =

#type: vex
#context: all
#group: array

"""Reorders items in an array or string."""

:usage: `string reorder(string value; int indices[])`
    Returns a reordered version of the _characters_ (not bytes) in the UTF-8 string `value` according to the positions in `indices`. The result is a UTF-8 encoded string.

:usage: `<type>[] reorder(<type> values[]; int indices[])`
    Returns a reordered version of the items in `values` according to the positions in `indices`.
    
This usually uses a list of indices generated by [Vex:argsort]. See the [Vex:argsort] page for an example.

* Negative numbers in the index list will read from the end of the array.

* The length of the resulting array/string is the same as the length of the `indices`. 

* Out of bound values will insert zeros, but this should be considered an error.


@related

- [/vex/arrays]
- [Vex:argsort]
- [Vex:reverse]
- [Vex:sort]

