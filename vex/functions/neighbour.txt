= neighbour =

#type: vex
#context: all
#tags: point, proximity
#group: geo

"""Returns the point number of the next point connected to a given point."""

This function lets you walk the points connected to a point (for example, in the same polygon). Note that "closest" below refers to connectivity, not physical distance. To get a list of all connected points at once, use [Vex:neighbours].

:usage: `int neighbour(<geometry>, int point_num, int neighbour_num)`

[Include:_common#geometry]

:arg:point_num:
    The number of the point whose neighbours you want to find.

:arg:neighbour_num:
    Which neighbour to find. `0` is the closest connected point, `1` is the next-closest neighbour, and so on. Use [Vex:neighbourcoount] to get the total number of connected points.

:returns:
    The point index of the neighbour of the point. The order is undefined, but will be consistent for consistent geometry. Returns `-1` if the `neighbournum` is out of range for that point, or the point is out of range for that input, or the input doesn't exist.


@related

- [Vex:neighbourcount]
- [Vex:neighbours]
