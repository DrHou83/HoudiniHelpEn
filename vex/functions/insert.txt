= insert =

#type: vex
#context: all
#tags: array, string
#group: array

"""Inserts an item, array, or string into an array or string."""

:usage: `void insert(string &str; int index; string value)`

    Inserts the `value` into the string `str` at the given `index`.
    
    If `index` is greater than the length of the string, the `value` will simply be appended to the existing `str`.

:usage: `void insert(<type> &array[]; int index; <type> value)`
:usage: `void insert(<type> &array[]; int index; <type> values[])`

    Inserts the items or items into the `array` starting at the given `index`.
    
    If `index` is greater than the length current length of the `array`, the function will fill the gaps with uninitialized values (for example, `0` or the empty string).

*  If the `index` is negative, it counts from the _end_ of the string or array you're inserting into. (If the negative number is greater than the string/array length, it is clamped to `0`.)

    For example, to insert the number `100` as the second-to-last item in an array:
    
    {{{
    #!vex
    insert(numbers; -1; 100)
    }}}


@related

- [/vex/arrays]
- [Vex:len]
- [Vex:push]
- [Vex:append]
- [Vex:resize]

