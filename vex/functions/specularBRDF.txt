= specularBRDF =

#type: vex
#context: all
#tags: shading, brdf
#group: shading

"""Returns the computed BRDFs for the different lighting models used in VEX shading."""

:usage: `float specularBRDF(vector L, vector N, vector V, float rough)`

`specularBRDF`, [Vex:phongBRDF], [Vex:blinnBRDF],
and [Vex:diffuseBRDF] return the computed BRDF for the
different lighting models used in VEX shading. You can use them in
custom [Vex:illuminance] loops to replicate the lighting models of the
corresponding VEX lighting functions.

{{{
#!vex
vector nn = normalize(frontface(N, I));
vector ii = normalize(-I);
Cf = 0;
illuminance(P, nn)
{
    vector ll = normalize(L);
    Cf += Cl * (specularBRDF(ll, nn, ii, rough) + diffuseBRDF(ll, nn));
}
}}}


@related

- [Vex:phongBRDF]
- [Vex:blinnBRDF]
- [Vex:diffuseBRDF]
- [Vex:illuminance]
