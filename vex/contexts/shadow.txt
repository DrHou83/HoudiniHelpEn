#type: vexcontext

= shadow =

"""Define a shadow shader by defining a program that's called from
surface or fog shaders to calculate the occlusion on a surface from a
light source."""

NOTE:
    In modern raytracing/PBR rendering, shadows are computed as part
    of the normal rendering process, and do not require separate shaders.

In micropolygon rendering, shadow shaders are called from surface or fog shaders to occlude the
illumination from a given light source. The light would have already been
computed by the light shader. The purpose of a shadow shader was to
modify the Cl variable. Typically, the light would be occluded, causing
the Cl variable to decrease in intensity.

You would typically use the shadow context to separate illumination from
expensive ray-tracing calls (like [Vex:fastshadow] or [Vex:filtershadow]). This
allowed fog shaders (or surface shaders) to easily bypass shadow
testing.


@globals

::P:
    #type: vector
    #mode: r
    #contentfrom: surface#P


::I:
    #type: vector
    #mode: r
    #contentfrom: surface#I


::dPds:
    #type: vector
    #mode: r
    #contentfrom: surface#dPds

::dPdt:
    #type: vector
    #mode: r
    #contentfrom: surface#dPdt

::N:
    #type: vector
    #mode: r
    #contentfrom: surface#N

::Ng:
    #type: vector
    #mode: r
    #contentfrom: surface#Ng

::Cl:
    #type: vector
    #contentfrom: surface#Ng

::L:
    #type: vector
    #mode: r
    #contentfrom: surface#L

::Ps:
    #type: vector
    #mode: r
    
    Position of the point on the surface being illuminated.

::Eye:
    #type: vector
    #mode: r
    #contentfrom: surface#Eye

::s:
    #type: float
    #mode: r
    #contentfrom: surface#s

::t:
    #type: float
    #mode: r
    #contentfrom: surface#t

::Time:
    #type: float
    #mode: r
    #contentfrom: surface#Time

::dPdz:
    #type: float
    #mode: r
    #contentfrom: surface#dPdz

::Lz:
    #type: vector
    #mode: r
    
    Z-axis in the space of the light. This is a unit vector.

::SID:
    #type: int
    #mode: r
    #contentfrom: surface#SID


@subtopics Functions

:list:
    #query: type:vex context:shadow



