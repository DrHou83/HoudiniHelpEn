#type: vexcontext

= light =

"""Define a light shader with a program called from surface or fog
shaders to calculate the illumination of a surface."""

NOTE:
    Unless you want to implement your own non-realistic lighting
    model, you do not need to write your own light shader.

In non-PBR rendering, light shaders are called from surface or fog
shaders to compute the illumination from a light source. The light
shader would be invoked in an [Vex:illuminance] loop or using the
standard diffuse(), specular(), etc. functions.


@globals

::P:
    #type: vector
    #mode: r
    #contentfrom: surface#P

::I:
    #type: vector
    #mode: r
    #contentfrom: surface#I

::dPds:
    #type: vector
    #mode: r
    #contentfrom: surface#dPds

::dPdt:
    #type: vector
    #mode: r
    #contentfrom: surface#dPdt

::N:
    #type: vector
    #mode: r
    #contentfrom: surface#N

::Ng:
    #type: vector
    #mode: r
    #contentfrom: surface#Ng

::Cl:
    #type: vector
    #contentfrom: surface#Cl

::L:
    #type: vector
    #contentfrom: surface#L

::Ps:
    #type: vector
    #mode: r
    #contentfrom: shadow#Ps

::Eye:
    #type: vector
    #mode: r
    #contentfrom: surface#Eye

::s:
    #type: float
    #mode: r
    #contentfrom: surface#s

::t:
    #type: float
    #mode: r
    #contentfrom: surface#t

::Time:
    #type: float
    #mode: r
    #contentfrom: surface#Time

::dPdz:
    #type: float
    #mode: r
    #contentfrom: surface#dPdz

::Lz:
    #type: vector
    #mode: r
    #contentfrom: shadow#Lz

::SID:
    #type: int
    #mode: r
    #contentfrom: surface#SID


@subtopics Functions

:list:
    #query: type:vex context:light



