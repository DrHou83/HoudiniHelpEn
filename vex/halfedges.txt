= Half-edges =

"""VEX has functions that let you treat edges as unshared per-face "half-edges"."""

== Overview ==


[Image:/images/model/half_edge1.png] |
    #width: 33%
    In Houdini, edges are normally treated as _undirected_ and _shared_ between faces. However, for some tasks (such as simplifying or cleaning geometry) it is useful to view faces as each having their own edges.

[Image:/images/model/half_edge_split.png] |
    You can think of this as splitting each shared undirected edge along its length into two _half edges_. (Boundary edges of course will only have one "half-edge".)

[Image:/images/model/half_edge2.png] |
    Each half-edge is _directed_ (it has a start vertex and an end vertex).

[Image:/images/model/half_edge3.png] |
    The half-edge functions let you quickly find a half-edge's source and destination vertex, the next half-edge, get the other half-edges from the same edge, find all half-edges sharing a given point, and other manipulations.

== Equivalence ==

Two half-edges are _equivalent_ if they are "split" from the same shared edge. In the following figure, three primitives share an edge. The half-edges _e_, _f_, and _g_ are _equivalent_ because they are from the same edge. Directionality does not matter -- _e_ is considered equivalent to _f_ and _g_ even though they have opposite directions.

[Image:/images/model/half_edge_equiv.png]

The source (and destination) vertex of a half-edge uniquely identify it, meaning that there can be at most one half-edge with a given vertex as the source. This is because a vertex can belong to only one primitive. However, because several vertices can be wired to the same point, half-edges can have shared source and destination _points_. Another way of thinking about equivalence is that two half-edges are equivalent if their vertices are shared by the same two points.

One of a set of equivalent half-edges is considered the _primary_ half-edge in that class. The VEX functions let you check if a given half-edge is primary, or given a non-primary half-edge, find the equivalent primary half-edge. In the case of an unshared edge, it only has a single primary half-edge.

== Functions ==

[Vex:hedge_isvalid] |
    Check whether a half-edge is valid
[Vex:hedge_isprimary] |
    Check whether a half-edge is primary
[Vex:hedge_primary] |
    Find the primary equivalent half-edge. If it belongs to an unshared edge, then the same half-edge is returned.
[Vex:hedge_isequiv] |
    Test whether two half-edges are equivalent
[Vex:hedge_nextequiv] |
    Iterate over the half-edges in an equivalence class
[Vex:hedge_equivcount] |
    Get the number of half-edges in an equivalence class
[Vex:hedge_srcvertex] |
    Get the source vertex of a half-edge
[Vex:hedge_dstvertex] |
    Get the destination vertex of a half-edge
[Vex:hedge_presrcvertex] |
    Get the vertex preceding the source vertex in half-edge primitive
[Vex:hedge_postdstvertex] |
    Get the vertex following the destination vertex in half-edge primitive
[Vex:hedge_prim] |
    Get the primitive of a half-edge
[Vex:hedge_srcpoint] |
    Get the source point of a half-edge
[Vex:hedge_dstpoint] |
    Get the destination point of a half-edge
[Vex:hedge_presrcpoint] |
    Get the pre-source point of a half-edge
[Vex:hedge_postdstpoint] |
    Get the post-destination point of a half-edge
[Vex:hedge_next] |
    Get the next half-edge in primitive 
[Vex:hedge_prev] |
    Get the previous half-edge in primitive
[Vex:pointedge] |
    Find half-edge between two points
[Vex:pointhedge] |
    Find half-edge with given source and destination
[Vex:pointhedge] |
    Find a half-edge with a given source point
[Vex:pointhedgenext] |
    Iterate over half-edges with a given source point
[Vex:vertexhedge] |
    Get the half-edge with a source vertex
[Vex:primhedge] |
    Get a half-edge on a given primitive
