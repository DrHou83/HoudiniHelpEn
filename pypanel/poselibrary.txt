= Pose Library =

:vimeo: Character picker and pose library
    #id: 142494488

== Starting a new Pose Library setup ==

:task: Create a new setup:
    Add a character rig to the scene by selecting that character with [Icon:BUTTONS/chooser_node]. Alternatively, the node name can be typed into the character text field, or dragged in from the Network Editor. A history of the selected characters is maintained in the drop down menu next to the character text field.
        
:task: Add a new pose tab:
    A default pose tab is created automatically by the pose library. Additional tabs can be created via __Tab > Add Tab__ when __Edit__ is turned on. When poses are captured they will be placed in whichever pose tab is currently selected. 
    
:task: Delete a pose tab:
    A pose tab can be deleted by clicking the close button on the tab when __Edit__ is turned on. Deleting a tab will delete all poses and clips stored on that tab.  Deleting a tab will provide the opportunity to save any unsaved changes before the tab is removed. 

    You can alternatively delete the current tab via __Tab > Remove Tab__.

:task: Delete all pose tabs:
    Select __Tab > Remove All Tabs__.  This will delete all poses and clips in the current setup.  Deleting all tabs will provide the opportunity to save any unsaved changes before all the tabs are removed.

:task: Rename a tab:
    Click ((RMB)) on the tab name when __Edit__ is turned on and select __Rename Tab__ from the context menu. 

== Capturing Poses and Clips ==(capture)

:task: Capture a single pose:
    # Turn on __Edit__.

    # Enter a name in the __Pose Name__ field.

    # Press the __Capture Pose__ button.

:task: Capture a sequence of frames:
    # Turn on __Edit__.

    # Enter a name in the __Pose Name__ field.

    # Specify the start and end frame by entering values in the __Start/End__ fields or using any of the __Frame Range__ menu options.
    
        Playback range:
            Set the Start/End frame range to the start and end frame range in the [playbar|/anim/playbar].
            
        Timeline range:
            Set the Start/End frame range to the start and end frame range specified in the [Global Animation Options|/ref/windows/global_anim_opts]. You can open this dialog by clicking [Icon:BUTTONS/chooser] in the bottom right corner of the playbar.
            
        Selected Range:
            Set the Start/End frame range to the the selected frame range in the [playbar|/anim/playbar]. You can select a frame range by holding ((Shift)) and dragging ((LMB)) on the playbar when you have scoped channels.
            
        Current Frame as Start:
            Set the start frame as the current frame in the playbar.
            
        Current Frame as End:
            Set the end frame as the current frame in the playbar.

    # Press the __Capture Clip__ button.

    NOTE:
        If the frame values are the same, a single-frame pose will be captured.

:task: Create a thumbnail for your captured pose or clip:

    Make sure the __Create Thumbnail__ checkbox is turned on in the [Icon:BUTTONS/gear] gear menu beside the __Capture Pose__/__Capture Clip__ button before capturing.
    
    By default, the thumbnails will only show the selected character. You can optionally create thumbnails that show all objects visible in the viewport by turning on the __Include All Objects in Thumbnail__ checkbox before capturing the pose or clip.

    TIP:
        You can optionally store an animated thumbnail with the captured clip by turning on the __Animate Thumbnail__ checkbox.  The animated thumbnail will play back the clip when the mouse is hovered over it. Otherwise, a still image will be used.
        
:task: Bake keyframes:

    Turn on the __Bake Clip__ checkbox in the [Icon:BUTTONS/gear] gear menu beside the __Capture Clip__ button before capturing.
    
    You can also enter a __Sample Rate__ to determine how often a keyframe is created. A value of 1.0 will bake a keyframe every frame, whereas a value of 2.0 will bake a keyframe every other frame.

NOTE:
    If the animation is driven by CHOPs, set the __Channel__ > __Channel Range__ parameter to __Use Full Animation Range__ for each node in the CHOP network.  This will guarantee that the full animation is captured. Only a single frame may be captured if the parameter is set to __Use Current Frame__.

    Not all CHOP nodes have the __Channel Range__ parameter.

When capturing, the pose library will first check the selected character for scoped parameters. If any are found the captured pose will only contain values for the scoped parameters within the specified frame range. If no parameters are scoped all of the auto-scoped parameters will be captured instead.

For a single-frame pose, the pose library will check for keyframe definitions at the current frame. If a parameter does not have a keyframe, the parameter is evaluated at the frame and the floating point result is stored as part of the pose. If a keyframe is found for a given parameter, the entire keyframe is stored in the pose.

For multi-frame clips, the pose library performs the single-frame process at both the start frame and end frame values. Additionally, any keyframes that lie between the start and end frame values are also included in the clip.

TIP:
    If the __Pose Name__ field is set to the __<default_name>__ placeholder, a unique name will be generated for the captured pose or clip.


== Editing and Deleting Poses and Clips ==

:task: Rename a pose:
    Click ((LMB)) on the pose name when __Edit__ is turned on.  You can alternatively click ((RMB)) on the pose and choose __Rename__.

:task: Reorder the poses:
    Drag and drop poses within a tab when __Edit__ is turned on. There is currently no mechanism for moving a pose from one tab to another.
    
:task:Delete a pose:
    Click [Icon:BUTTONS/delete_mini] in the top right corner of the pose or clip you want to delete when __Edit__ is turned on.  You can alternatively click ((RMB)) on the pose and choose __Delete__.
    
:task:Copy a pose:
    Click ((RMB)) on the pose and choose __Duplicate__ when __Edit__ is turned on.
    
:task:Change the pose thumbnail with an image file:
    Click ((RMB)) on the pose and choose __Change Thumbnail > From File...__ when __Edit__ is turned on.

    Supported image file formats:
    - tiff
    - jpeg
    - png
    - bmp
    - gif (animated and still image)

    NOTE:
	    The image file resolution should be 250x250.  If it is not, the image will be scaled to 250x250.  Also, if the image doesn't have a square resolution, the image will be cropped from the center.

:task:Change the pose thumbnail with an image file:
    # Click ((RMB)) on the pose and choose __Change Thumbnail > From Viewport...__ when __Edit__ is turned on.  
    
    # Specify the start and end frame by entering values in the__ Start/End__ fields or using any of the __Frame Range__ menu options.  The options are explained in the [Capturing Poses and Clips|#capture] section.  
    
    # Click the __Create__ button to create the new thumbnail.

    TIP:
	    By default, the new thumbnail will only show the selected character. You can optionally create a thumbnail that shows all objects visible in the viewport by turning on the __Include All Objects in Thumbnail__ checkbox before capturing the viewport.


== Applying a Pose ==

When __Edit__ is turned off, click a pose to apply it to the selected character. If the pose is a single-frame pose, the parameters in the character rig will be set to match the stored values in the pose at the current playbar frame. If the pose is a multi-frame clip, it will be applied starting at the current frame and ending at current + (`clip_end` - `clip_start`). Pressing ((Ctrl + Z)) after applying a pose will undo the pose.


What happens when applying a pose depends on both the character rig and the way the pose was captured. If the captured pose defines a keyframe for a parameter, when the pose is applied that keyframe and its associated value will always be applied to the rig at the target frame. If the pose only contains a floating point value for a parameter and the character does not have any keyframes defined for the parameter, the parameter will simply be set to the floating point value. No keyframe will be created. If the pose contains a floating point parameter value and the rig does have a keyframe set on the parameter, the value will be committed to the existing keyframe.

If the captured clip data was from a CHOP network, the behavior of applying the clip depends on the __Preserve CHOP Data__ parameter.  When the parameter is checked, a new CHOP node is created to store the original CHOP sample data.  The target parameter is then configured to load animation from the CHOP node.  You can specify where the CHOP node is created by editing the __CHOP Path__ parameter.  If __Preserve CHOP Data__ is unchecked, the sample data is converted into keyframes which are applied to the target parameter.  If the captured clip data was not from a CHOP network, the __Preserve CHOP Data__ parameter is ignored and the clip is loaded as keyframes.

NOTE:
    You can apply poses to characters whose node types do not match those of the character from which the poses were captured. The pose library will skip any missing or invalid parameters when applying the pose.

        
== Blending a Pose ==

In addition to applying a pose, you can also blend a pose with the character rig's current state. This is done by clicking and dragging ((Ctrl + MMB)) on a pose in the library. When the blend slider is at 0%, the character rig retains its existing pose. When the slider reaches 100%, the character rig's pose is set to the selected pose. For any value in between, the character rig and selected pose are linearly blended. The resulting blend of poses is shown in the viewport and applied when ((Ctrl + MMB)) is released. 

TIP:
    Pressing ((Ctrl + Z)) after releasing ((Ctrl + MMB)) will undo the blending operation.
    
NOTE:
    Currently, rotation parameters in the pose are not converted to quanternions and thus are not blended with `slerp()`. Rotations are treated in the same way as all other floating point parameters and blended linearly based on component values. This limitation may be improved in the future.

== Saving and Loading ==

To save the state of the pose library, use __Pose > Save Poses__. Poses can be stored directly to `.json` files or as part of a Houdini Digital Asset. Both methods will preserve the state of the pose tabs, icons, and ordering. The __Save__ menu option will save the poses to whichever file or HDA they were originally loaded from.

Like saving, poses can also be loaded from either a .`json` file or an HDA. There are two ways to read in existing poses: load and merge. Selecting __File > Load Poses__ will provide the opportunity to save any unsaved changes, clear the library and then populate the library with the poses stored in the chosen file or HDA. Selecting __File > Merge Poses__ will append the poses from the target file or HDA to the pose library.  You can alternatively merge poses with ((RMB)) on empty space in the current tab and use the __Merge__ menu.

== Exporting and Importing ==

To export a pose, click ((RMB)) on the pose and use the __Export__ menu.  Like saving, individual poses can be exported to `.json` files or as part of a Houdini Digital Asset.  Exporting a pose will provide the option to either merge the exported pose with the pose library currently stored in the file or asset, or overwrite the pose library.

To import poses into the current tab, select __File > Import Poses__.  You can alternatively ((RMB)) on empty space in the current tab and use the __Import__ menu.  Poses can be imported from `.json` files or from Houdini Digital Assets.

NOTE:
    Importing poses will load poses into the current tab while merging poses will create the tabs that contain the poses if they do not exist and load the poses into those tabs.

== Display Settings ==

The Capture Pose Controls can be shown or hidden using the [Icon:BUTTONS/plus] and [Icon:BUTTONS/minus] button next to the control title. By default the controls are visible.

The __View__ menu lists options for configuring how the pose tab entries are displayed. The __Zoom In__, __Zoom Out__, and __Actual Size__ menu items can be selected to set the zoom factor. The zoom factor is shared amongst all of the pose tabs. __Thumbnail Only__, __Text Only__, and __Thumbnail and Text__ can be selected to configure how the pose entries are displayed. By default, pose entries will show both their icon and text.

