= Autorigs =

This pane allows you to build rigged HDAs. You can create simple single control rigs for layout assets such as houses/props or more complex character rigs with the use of a series of modules. The modules are added to the interface by clicking their icon, loading from file, loading from an existing HDA, or from a preset. 

Autorig System contains various modules for biped, quadruped, and facial rigging. Each the these modules contains a set of guide objects that you can position within your mesh to determine the location of the final rig elements. Additionally, each module has various options and settings to determine the features of the final rig.

== Using the Autorigs panel ==

# Click ((+)) to add a __New Pane Type__ and select __Autorigs__.

# Click the __New Autorig Asset__ button to open the __Create New Autorig Asset__ popup.

# In the __Create New Autorig Asset__ popup:
    * Give your asset a name and a type.
    * Select your __Rig Geometry Source__. This can be __None__, __Operator__, __File__, or __Standin__. Selecting __Standin__ will create a box.
    * Choose the __Autorig Type__. This can be a __Blank Rig__, __Biped__, or __Quadruped__.
    * Determine if the file path will be embedded in the `.hip` file or saved to disc.
    * Choose how you'd like your geometry to be captured. By default, this is [Biharmonic|Node:sop/bonecapturebiharmonic].
    * Decide if you'd like to display the deform SOP. This if off by default, since it will be very slow if you have a heavy mesh for Biharmonic capturing.
    * Choose a custom icon for your asset.

# Click __Create__ when finished. 
    NOTE:
        These settings can be changed later.

    This will create an HDA in the chosen location with the chosen name. Currently the __Operator Type__ will use the asset name. For example, if your asset name is `char0001`, the HDA Type will be defined by `char0001.hda`. Within this HDA there will be: `master_node_guide`, `stand_in`, and `geo_skin` nodes, which are internal placeholders (not interactive).
        
    A new tab will be created, containing the settings for the current asset. All assets will contain a master module. In its options, you can set a custom label which will appear within the circle. You can also change the size, color, and position of the master node.
    
    TIP:
        To review or edit the HDA settings, you can click the [Icon:BUTTONS/gear] gear menu at the top of the asset tab.

# Use the __Biped__, __Quadruped__, or __Import Preset__ options on the __Presets__ tab, or build your own rig using the biped or quadruped modules. For this example, we will build a rig using the modules on the __Biped Modules__ tab.

    Clicking on the [Icon:OBJ/autorig_spine] __Spine__ button will add this module to your asset in the viewport. You will see a series of guide objects which can be moved into place to define the shape of the spine.

    [Image:/images/autorigs/spine.png]

# Continue for each module. [Icon:OBJ/autorig_head] [Icon:OBJ/autorig_arm] [Icon:OBJ/autorig_leg] [Icon:OBJ/autorig_hand] [Icon:OBJ/autorig_foot]\

    TIP:
        Turn on [Icon:TOOLS/snap_curve] __Interior Snapping__ in the viewport which will snap to the center of the geometry under the cursor. This is especially useful when setting up the fingers in the hand module.

    Each of the modules have tabs for __Options__, __Parameters__ and __Proxy Parameters__. You will need to select a parent for each of the modules using the dropdown menu. For example, the parent for the spine should be the `master_node_guide`, the parent for the head should be the `SPINE_TOP_HOOK`, the parent for the legs should be the `SPINE_BASE_HOOK`, etc.
    
    NOTE:
        The __Arm__, __Leg__, __Hand__, and __Foot__ modules have options for mirroring. This will display a mirror copy of the current module's guide objects. They are not selectable or editable as their positions are determined by the main guide objects.
        
        [Image:/images/autorigs/mirror.png]
    
    NOTE:
        The __Hand__ and __Foot__ modules have options to choose between a __Glove__/__Boot__ type and a __Fingers__/__Toes__ type. The __Fingers__ and __Toes__ types allow you to choose the number of fingers or toes you rig will have and if you want a thumb or big toe.
        
        [Image:/images/autorigs/fingers.png]
        
    WARNING:
        There is a hard limit of up to 99 fingers or toes. However, building an asset with this many fingers/toes is not recommended.
        
        
# Click __File__ > __Save__ and save the settings into the HDA, file on disk, or a different HDA.
        
    TIP:
        You can save individual modules to reuse on other characters by clicking ((RMB)) -> __Export__.
        
# Click __Generate Rig__ to build the asset. 

    Building the rig will do the following:
        * The current settings will be saved with the HDA.
        * If a custom name has been added to the master node, it will be saved as a geometry section into the HDA.
        * The specified geometry will be added to a geometry node according to the settings.
        * Each module will build the rig elements needed for that part. 
        * The asset will be saved and locked.
        * The assets tab will be removed from the interface.
        
    [Image:/images/autorigs/rig.png]
