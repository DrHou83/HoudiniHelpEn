= VOPNET properties =

#type: properties

== Overview ==

These properties control compilation of VOP networks for rendering. They are in the `VOPNET Compiler Options` folder in the list of properties available under the __Render Properties__ tab of the [Edit parameter interface window|/ref/windows/edit_parameter_interface]. Select a node, and in the parameter editor click the [Icon:BUTTONS/gear] Gear menu and choose __Edit rendering properties__ to add or remove properties to a render driver, camera, object, shader, or properties node.


@properties

== Compiler ==

::RSL Compiler:
    #hprop: prman_compiler
    #default: ("hrmanshader")
    
    The RSL shader compiler to invoke to compile RenderMan VOP networks. This defaults to `hrmanshader` which automatically checks the `HOUDINI_DEFAULT_RIB_RENDERER` to call the right compiler. However, you can override it if your RIB renderer is not supported by `hrmanshader`.

::VEX Compiler:
    #hprop: vcc_compiler
    
    The VEX compiler to invoke to compile mantra VOP networks.

::OSL Compiler:
    #hprop: vop_compiler
    
    TBD.

::Force Compile:
    #hprop: forcecompile
    
    A button that forces compiling of the VOP network.

::Force Code in Context:
    #hprop: vop_force_code_context

    A string property on a VOP digital asset node that specifies shading
    contexts in which the node should force generation of code.
    In a multi-context network such as vopmaterial, not all nodes should generate
    code for a given context. For example, some nodes are applicable only to
    surface shader while other to displacement shader. Only a few nodes initiate
    (force) generation of code, such as [Collect VOP|Node:vop/collect], [Output VOP|Node:vop/collect], or exporting
    [Parameter VOP|Node:vop/parameter]. Then, only nodes that feed into them will also generate code.
    If an HDA does not have output connectors or wants to generate code even 
    if not (indirectly) connected to the [Output VOP|Node:vop/collect], it can use this property
    parameter to specify the shading context in which to initiate generation 
    of code.

