= Configuring Houdini =

== Overview ==

Houdini has configuration options in many different places. Some of the most important:

[Main preferences window|/ref/windows/mainprefs]:
    Choose __Edit > Preferences > <<category>>__.

[Display options|/ref/windows/displayopts_3d]:
    Click the [Icon:BUTTONS/displayoptions] Display Options button in the 3D view (and some other views) to get options related to the view.

* Options windows. Click the [Icon:BUTTONS/options]




Choose a category from the __Edit > Preferences__
submenu to open the  .

See also [how to change the hotkeys|hotkeys] and [how to customize the shelf|/shelf/customize].

== Common UI customizations ==

You can customize the UI for a particular workflow, project, or
facility.

:task:Scale the Houdini UI:
    Choose __Edit > Preferences > General user interface__ and change the __Global UI size__ option.
        
    You can also set the `HOUDINI_UISCALE` as an environment variable to access a full range of scaling values as a percentage of the normal size (default is 100).
    
:task:Adjust the UI colors:
    Choose __Edit > Color settings__.
    
:task:Use Houdini 8-style pane coloring to show network type:
    Choose __Edit > Preferences > General user interface__ and turn on __Color pane headers with network contexts__.
        
:task:Add preset colors to the palette in the color picker dialog:
    # Use the color sliders to choose the color you want.

    # ((Alt + LMB)) anywhere in the palette area to add the current 
      color there. The color will be appended as the last entry.

      The color definition is saved in
      `$HOME/houdini<<X>>.<<Y>>/.palette` (where <<X>>.<<Y>> is the
      version number of Houdini) so it persists between Houdini
      sessions.

:task:Remove preset colors from the palette in the color picker dialog:
    # ((Ctrl + LMB)) on the color entry in the palette area to be removed.

== Common viewer customizations ==

:task:Change the tumbling behavior:
    # Choose __Edit > Preferences > 3D Viewports__.

    # Click a tumbling method. The default is __80s-style Euler tumbling__,
      which doesn't let you tilt the horizon or go upside-down by
      tumbling (you can still tilt using special keys, see the
      [section on viewing|view]).

:task:Turn off multicolored handles:
    With this option off, Houdini will draw handles all-red instead of
    coloring the axes red, green, and blue.
        
    # Choose __Edit > Preferences > Handles__.

    # Turn off __Color transform handles by axis__.
        
:task:Use a black background in the 3D viewer:
    # Click the viewport options menu and choose __Display > Display Options__ or press ((D)) to open the [Display Options window|/ref/windows/displayopts_3d].
        
        [Image:/images/ui/viewport_menus_anno.png]

    # Click the __Background__ tab.

    # Set the __Color Scheme__ pop-up menu to __Dark__.

:task:Change the background color in a compositing viewer:
    # In a compositing viewer pane, open the right side toolbar and click [Icon:BUTTONS/chooser] Display Options or press ((D)) to open the Display Options window.

    # Click the __Background__ tab.

    # Click the color swatch to choose a color.

== Common network editor customizations ==

:task:Choose whether to zoom in and out from the center or based on the mouse position:
    # Choose __Edit > Preferences > Network Editor, Nodes and Trees__.

    # Turn __Center zoom on mouse__ on or off.
        
:task:Change how wires are drawn:
    # In the network editor, press ((D)) to open the display options.
        
    # On the __Network View/Display__ tab, set the __Link style__ option.
        
:task:Automatically place new nodes instead of requiring a click:
    # Choose __Edit > Preferences > Network Editor, Nodes and Trees__.
        
    # Turn on __Place new tiles immediately__.

== Paths and locations ==

Houdini uses two types of environment variables for
specifying directories: _paths_ (lists of locations to check for files),
and _locations_ (paths of directories).

In a command line shell, run `hconfig -ap` to show the current path
and location assignments, and instructions and shortcuts for setting
the variables.
    
=== Locations ===

Locations, like `$HSITE` (directory of site-specific files) and
`$HIP` (the directory containing the current `.hip` file), specify
the directory in which to find files for various purposes.

Unlike a path, a location variable can't have multiple directories;
it's simply used to avoid hard-coding locations, as in
`$HFS/geo/model.bgeo` instead of
`/usr/joe/files/show/act1/scene1/geo/model.geo`. This makes the `.hip`
file much more portable between machines and operating systems.

TIP:
    You can set the `$HSITE` variable to a directory containing
    site-specific files. You can set the `$JOB` variable to a
    directory containing project-specific files. The two locations
    are included in the path, but not defined by default. So, if you
    define one or both, they will already be included in the path.
    
NOTE:
    The `$HSITE` directory must contain a `houdini<<x>>.<<y>>`
    directory (such as `houdini9.0`). If no such directory exists,
    Houdini will not search in `$HSITE`.

=== Paths ===

Paths, like `$HOUDINI_PATH`, can have more than one location, and
Houdini searches the locations in the path in the order they appear
in the variable.

Houdini uses paths to search for various file types (for example,
`$HOUDINI_GEOMETRY_PATH` for `.geo` files) when the file's location
is not absolute.

For example, the default `$HOUDINI_GEOMETRY_PATH` is:

{{{
./
$HOUDINI_PATH/geo/
}}}

If you add a location to the path:

{{{
./
$HIP/geo/
$HOUDINI_PATH/geo/
}}}

...then you can just use `model.bgeo` in a geometry file parameter and
Houdini will find it if it exists in `$HIP/geo/`.

Some important Houdini paths:

`$HOUDINI_GEOMETRY_PATH` :
    Geometry (`.geo`) files.
    
`$HOUDINI_OTLSCAN_PATH` :
    Houdini digital asset (`.hda`) files.
    
`$HOUDINI_SCRIPT_PATH` :
    HScript (`.cmd`) files.
    
`$HOUDINI_TEXTURE_PATH` :
    Image files.
    
`$HOUDINI_CLIP_PATH` :
    Channel and audio files.
    
`$HOUDINI_VEX_PATH` :
    Compiled VEX (`.vex`) files.
    
This not a full list of search paths. In a command shell, run
`hconfig -ap` to see all available path variables.

== Configuration files ==

Houdini will search certain paths to build up the configuration when it launches. The main path is in the environment variable `HOUDINI_PATH`. For different options, Houdini may find the first file it finds, or it may aggregate all files found in the path.

* Execute the first startup scripts it finds (`123.cmd` and `456.cmd`). See [event scripts|/commands/_guide#eventscripts].

* `hopmanager.pref` file (for OTL configuration). See [Operator type manager|/ref/windows/optypemanager].

* `OPmenu` file (for customizing ((RMB)) menu options of nodes).

* `FBres` file (for customizing the list of preset resolutions in pop-up menus on render nodes, lights, and cameras).

* `FBrender` file (for customizing the list of preset sequence filename patterns in pop-up menus).

* Most files under `$HFS/houdini` (`$HH`). You can copy these files into `$HOME/houdiniX.X` (which is earlier on the `HOUDINI_PATH`) and modify them to override the files in `$HH`.

NOTE: 
   Preference files (`.pref`) that are outside of `$HOME/houdini` must be suffixed 
   with `.nosave` in order for them to be recognized, even if they occur earlier 
   in the `HOUDINI_PATH` (ie, `ui.pref.nosave`). 

== Preventing user changes ==

* If you are creating/copying `.pref` and/or `.desk` files manually instead of using the graphical interface (for example, to enforce uniform layouts/preferences across all machines), you can usually append `.nosave` to the filename to prevent the files from being overwritten with user changes. The user can still change the settings in a session, but those changes will not be saved between sessions.

* For desktop (pane layout) files, this is the same as turning on the "no save" option in the [desktop editing interface|/ref/windows/desks].

* The downside is that a preference file often contains many different preferences and you may not want to lock them all down. The `.nosave` feature is most useful to override `hopmanager.pref` settings to provide a consistent set of OTLs.

* Make sure the `.nosave` version of the file is higher in the `HOUDINI_PATH` than a regular version.

@related

- [Customizing the shelf|/shelf/customize]
- [Customizing the tab menu|tabmenu]
- [Customizing pane layout|panes]
- [Configuring environment variables|config_env]
- [Customizing the menus|config_menus]
- [Creating shelf tools|/ref/windows/edittool]
- [Customizing hotkeys|hotkeys]
- [Using HUD sliders|hud_sliders]
