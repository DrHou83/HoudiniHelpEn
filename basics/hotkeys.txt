= Configuring hotkeys =

#bestbet: hotkey hotkeys shortcut shortcuts keys
#helpid: h.hotkey_mgr

== Overview ==

[Image:/images/ui/hotkey_manager.png]

* The left pane shows a tree of *contexts*.

    Each hotkey exists in a context. The same key can be assigned to different actions in different contexts. A hotkey in a higher-level context (for example, the top level "Houdini" context) will be overridden by the same hotkey on a more specific context 9for example, the geometry viewer's Select tool).
    
    Some hotkeys, such as ((Del)), are assigned to similar actions in many different contexts.

* The middle pane shows a list of *actions* in the currently selected context.

* The right pane shows a description of the currently selected action and a list of hotkeys assigned to the action.

* Across the bottom is a keyboard schematic showing what keys are currently assigned in the selected context.


== Keyboard schematic ==

* Keys assigned in the selected context are brightened.

* Hotkeys assigned in a lower (more specific) context have light stripes. You can assign the key to an action in this context, but be aware that when you are in the more specific context the key will be overridden.

* Hotkeys assigned in a higher (more general) context have more prominent dark stripes. You can assign the key to an action in this context, but be aware that you will be overriding a more general hotkey in this context.

[Image:/images/ui/hotkey_indicators.svg]

* Click the Shift, Ctrl, Command, and/or Alt modifier keys on the virtual keyboard to see assignments with those modifiers.

* Click a key to see all assignments to that key (plus any modifiers) in all contexts.


== Editing hotkeys ==

:task:Open the hotkey editor:
    In the main menus, choose __Edit > Hotkeys__.

:task:Find the hotkey entry for an item in the interface:
    * ((Ctrl + Alt + Shift + LMB)) click an item in the interface (for example, a toolbar button or menu item) to open it in the hotkey editor.
    
        _or_
        
    * Type words associated with the action in the hotkey editor's search box.
    
:task:Find the actions assigned to a key:
    * Click the key on the virtual keyboard at the bottom of the window.
    
        _or_
        
    * Type the key text (for example, `Shift+L`) in the hotkey editor's search box.

:task:Assign a hotkey to an action:
    # Find the action in the hotkey editor.
    
    # In the right pane, double-click the [Smallicon:BUTTONS/list_add] add mapping line in the list of hotkeys.
    
    # Type the hotkey you want to assign (or click the key on the virtual keyboard at the bottom of the window).

:task:Remove a hotkey from an action:
    # Find the action in the hotkey editor.
    
    # In the right pane, click the [Smallicon:BUTTONS/list_delete] Remove button next to the hotkey.


== Resolving conflicts ==

:fig:[Image:/images/ui/hotkey_conflict_message.png]

    When you assign a hotkey to an action, if the key is already assigned in a higher (more general) or lower (more specific) context, Houdini will display a warning icon next to the key in the hotkey list.

    When you select hotkey, the editor displays a message explaining the potential conflict.
    
    *Conflicts are often OK*. There are many situations where you don't care that a key in a specific context overrides the same key in a more general context.
    
    For example, if you're working in a modeling tool and not doing animation, you might assign the ((K)) key and not worry that you're overriding the Set Keyframe key.

However, if you want to resolve the conflict by editing the editing the keys, you have several choices:

* To remove or change the hotkey from the selected action, click the [Smallicon:BUTTONS/list_delete] Delete button next to the hotkey.

* To remove the hotkey from the _other_ action the key is assigned to, click __Remove other__ in the conflict message.

* To change the hotkey on the _other_ action the key is assigned to, click __Edit other__ to jump to the other action in the editor.


== Assign a radial menu to a hotkey == (radials)

# In the hotkey editor, search for `radial`, or browse to the __Houdini > Panes > Geometry Viewers__ context in the left pane and scroll to find the radial menus in the middle pane.

    The Geometry Viewers context contains actions corresponding to the radial menus defined in the [Icon:BUTTONS/radialset] Radial menu switcher at the top of the main window.
    
    If you want to create a new radial menu on a key, first create the new menu using [Icon:BUTTONS/radialset] __Radial menu > Create New__. Then go to the hotkey editor to assign it to a key.

# In the middle pane, select the radial menu you want to assign a key.

# In the right pane, double-click the [Icon:BUTTONS/list_add] Add row and press the key you want to assign to the radial menu.

# Click __Accept__ to save the change to the keymap.

TIP:
    On Windows and Linux, you can open the [Icon:BUTTONS/radialset] radial pop-up menu and ((Shift + Ctrl + Alt + LMB)) click the name of a menu to jump to it in the hotkey editor.

NOTE:
    The current UI represents a transition between Houdini 16.0, which had radials hardwired to a few keys, and a future version of Houdini that will have a more natural interface for putting menus on keys.


== Managing keymaps ==

* The _keymap_ is the set of all assigned hotkeys in the application. Houdini ships with a write-protected default keymap in the install directory.

* If you make any changes to the defaults, the editor stores the modified key map in your preferences directory.

* You can branch off a new custom keymap using __+(fa-cog) > Save As__.

* To switch to a different key map, click the __Keymap__ pop-up menu in the top-left corner of the hotkey editor and select the map you want to switch to.


== Tips ==

* Browsing for actions in the context tree is not very useful. It's easier to find an action using the search box in the hotkey editor, or by ((Ctrl + Alt + Shift + LMB)) clicking an item in the user interface.

    NOTE:
        The current legacy organization of contexts is often counter-intuitive. We hope to re-organize the contexts in a future version.

* To restore the selected action to its factory default hotkeys, click __+(fa-cog) > Reset > Command__.

* To restore all actions in the selected context to their factory default hotkeys, click __+(fa-cog) > Reset > Context__.

* To restore the entire keymap to factory defaults, click __+(fa-cog) > Reset > All__.


