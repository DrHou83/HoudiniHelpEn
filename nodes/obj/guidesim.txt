#type:     node
#context:  obj
#internal: guidesim
#icon:     OBJ/guidesim

= Guide Simulate =

"""Runs a physics simulation on the input guides."""

Extracts the required skin and guide curves from a groom object such as a
[Guide Groom|Node:obj/guidegroom] or [Guide Deform|Node:obj/guidedeform]. These
nodes can also write their groom data to files which can be imported by this
node.

@parameters

== Groom Source ==

[Include:/nodes/sop/fur_common#sourcemode]

[Include:/nodes/sop/fur_common#sourcegroomobject]

[Include:/nodes/sop/fur_common#sourcegroomfile]

Use Object Transform:
    #id: usetransform

    Take this object's transform into account when simulating curves.

== Dynamics ==

Enable Dynamics:
    #id: enabledynamics

    Enables dynamics simulation.

[Include:dopnet#resimulate]

[Include:dopnet#cacheenabled]

Create External DOP Network:
    #id: createexternaldopnet

    Copy the internal DOP network to an external one for editing.

Use External DOP Network:
    #id: useexternaldopnet

    Fetch the simulation from an external DOP network.

Guide DOP Object:
    #id: guidesdopobject

    Get the simulation output from this DOP object.

Use Freeze Frame:
    #id: usefreezeframe

    Freeze the simulation in time.

Freeze Frame:
    #id: freezeframe

    Freeze the simulation at this frame.

== Display ==

Display As Subdivision Curves:
    #id: displayassubd

    Subdivide curves in the viewport for smoother display.

Display Color:
    #id: displaycolor

    Display curves in this color in the viewport.

== Simulation ==

[Include:dopnet#startframe]

[Include:dopnet#timescale]

[Include:/nodes/dop/wiresolver#spatialscale]

[Include:/nodes/dop/wiresolver#minsubsteps]

[Include:/nodes/dop/wiresolver#tol]

[Include:/nodes/dop/wiresolver#resolvemaxpasses]


== Physical ==

=== Physical Parameters ===

    [Include:/nodes/dop/standard_wirephys_parms]

=== Elasticity ===

    [Include:/nodes/dop/standard_wireelasticity_parms]

Reference Matching:
    #id: lengthmatch

    Values greater than zero cause all curves to behave more like curves that
    are as long as __Reference Length__. This causes hairs that are longer than
    the reference length to bend less and curves that are shorter to bend more.

Reference Length:
    #id: lengthmatchref

    The reference length used by __Equal Length Behavior__.

== Plasticity ==

    [Include:/nodes/dop/standard_wireplasticity_parms]

== Forces ==

=== Target ===

Target:
    #id: enabletarget

    Enable a force which causes curves to stick more closely to their predefined shape.

[Include:/nodes/dop/standard_wireobjecttabs#targetstiffness]

[Include:/nodes/dop/standard_wireobjecttabs#targetdamping]

=== Gravity ===

Gravity:
    #id: enablegravity

    Enable Gravity

Force:
    #id: gravityforce

    The magnitude of gravity.


=== Wind ===

Wind:
    #id: enablewind

    Enable the wind force.

Velocity:
    #id: windvel

    The wind field's velocity.

Strength:
    #id: windstrength

    The strength with which curves adjust to the wind's velocity.

=== Noise ===

[Include:/nodes/dop/windforce#seed]

[Include:/nodes/dop/windforce#fractaldepth]

[Include:/nodes/dop/windforce#roughness]

[Include:/nodes/dop/windforce#attenuation]

[Include:/nodes/dop/windforce#frequency]

[Include:/nodes/dop/windforce#minvalue]

[Include:/nodes/dop/windforce#maxvalue]

[Include:/nodes/dop/windforce#offsetx]

=== Drag ===

[Include:/nodes/dop/standard_wireobjecttabs#normaldrag]

[Include:/nodes/dop/standard_wireobjecttabs#tangentdrag]

== Constraints ==

=== Roots ===

Root Constraint:
    #id: rootconstraint

    Controls the way curve roots are constrained to the input groom.

    Position & Orientation:
	Match position and direction of roots to the input groom. This
	causes curves to stick out of the skin in the direction
	of the groom.

	This sets the `gluetoanimation` attribute of root points to `1`.

    Position:
	Match the position of roots to the input groom. Curves will drop &
	swing freely as the direction is not constrained at all.

	This sets the `pinttoanimation` attribute of root points to `1`.

=== Clumping ===

Create Clump Constraints:
    #id: createclumpconstraints

    Create constraints between guides that belong to the same clump.

    TIP:
	You can create clumps using the [Clump|/shelf/sop_groom_hairclump]
	tool.  This should be used on a Guide Groom, which can then be fed into
	this node. The [Clump|/shelf/sop_groom_hairclump] tool creates a
	`clumpid` attribute, which is used to identify clumps.

Max Guides Per Clump:
    #id: clumpguidelimit

    Only create clump constraints for clumps that have at most this number of
    guides.

    All the unclumped guides in a groom belong to the same clumpid. Without
    this limit, these guides would be considered a clump and constraints would
    be created between them.

Display Clump Constraints:
    #id: displayclumpconstraints

    Display clump constraints in the viewport.

== Collisions ==

=== Wire-Wire ===

Self Collisions:
    #id: collideself

    Compute collisions with other parts of the same guide curve.

=== Wire-Geometry ===

[Include:/nodes/dop/wiresolver#collisionhandling]

[Include:/nodes/dop/standard_wireobjecttabs#repulsion]

==== Skin ====

Collide With Skin:
    #id: skincollisions

    Compute collisions with the skin geometry.

VDB Source:
    #id: skinvdbsource

    Compute From Geometry:
	Compute the required collision volume internally. This is done using
	VDB volumes.

    SOP Volume:
	Fetch a collision volume from a specified SOP path.

Voxel Size:
    #id: skinvdbvoxelsize

    The voxel size to use when computing the collision volume.

Fill Interior:
    #id: skinvdbfillinterior

    Computes distance values for the entire interior of the object. This
    ensures that collision detection works even deep inside the object, but can
    greatly increase the computation time and space requirements of the volume.

Interior Band:
    #id: skinvdbinteriorband

    How far into the object to compute distance values when __Fill Interior__
    is disabled.

Volume SOP:
    #id: skinvdbsop

    The SOP path to get the collision volume from when __VDB Source__ is set to
    __SOP Volume__.

=== External ===

Collide With External Geometry:
    #id: extcollisions


SOP Path:
    #id: extsop

    The SOP path to fetch the external collision geometry from.

VDB Source:
    #id: extvdbsource

    Compute From Geometry:
	Compute the required collision volume internally. This is done using
	VDB volumes.

    SOP Volume:
	Fetch a collision volume from a specified SOP path.

Voxel Size:
    #id: extvdbvoxelsize

    The voxel size to use when computing the collision volume.

Fill Interior:
    #id: extvdbfillinterior

    Computes distance values for the entire interior of the object. This
    ensures that collision detection works even deep inside the object, but can
    greatly increase the computation time and space requirements of the volume.

Interior Band:
    #id: extvdbinteriorband

    How far into the object to compute distance values when __Fill Interior__
    is disabled.

Volume SOP:
    #id: extvdbsop

    The SOP path to get the collision volume from when __VDB Source__ is set to
    __SOP Volume__.

== Caching ==

    See the [File Cache SOP|Node:sop/filecache] help for these parameters.

@locals


@related
- [Node:obj/guidedeform]
- [Node:obj/guidegroom]
- [Node:obj/hairgen]
- [Node:obj/groommerge]

