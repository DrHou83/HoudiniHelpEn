#type: node
#context: obj
#internal: blend
#icon: OBJ/blend

#tags: blend, util

= Blend =

"""Switches or blends between the transformations of several input objects."""

The Blend object allows various effects such as blended inputs,
animating the parents of objects, sequencing, partial transformation
inheritance, three-point orientation, and other effects. It gives you
some extra flexibility in setting up parent-child relationships. It
operates like the Switch and Sequence blend sops insofar as it takes
more than one input and blends or switches those into one output.

Some potential uses of the Blend op are to animate parenting, such as
when one character passes an item to another, or to pass on only part of
a parents characteristics.

The Blend Object gives you some extra flexibility in setting up
parent-child relationships. It operates like the Switch and Sequence
blend sops insofar as it takes more than one input and blends or
switches those into one output. As with the other objects, such as
lights and cameras, the Blend OP can be placed and wired into networks,
but its only purpose is to channel data rather than hold it.

_Blend_ allows for a great deal of control over how much influence each
of the inputs has over the child object. This can be set either using a
weight value for the input or by masking the input to restrict its
effect by channels. Each input has its own set of weight and mask
controls. There is a special case when you have exactly three inputs
which enables the _Normal Offset_ and _Orient Axes_ parameters. The
Offset works by moving the child perpendicular to the plane formed by
the three inputs; the _Orient_ function rotates the child such that the
first input determines the axes center, the second the +X orientation,
and the third the +Y orientation.

The __Sequence__ type simply switches between inputs, so the weight and
mask controls become inactive. A __Sequence__ value of 0 parents the child
to the first input object, a value of 1 parents it to the next, etc. Any
value outside the range of inputs will unparent the child.


@parameters

== Parents ==

Type:
    Method in which parent transforms are combined to produce a
    unique transform.

== Blend ==

Use Rest Angles:
    If enabled, this is used when performing shortest path rotation
    blending to control when flipping will occur. The flipping
    point will occur when the input orientations differ from the
    rest angles by more than 180 degrees.

Rotation Blending:
    This controls the type of rotation blending used. When
    blending between full rotations (ie. rx, ry, and rz) at the same time,
    then in addition to Euler, the Shortest Path rotation blending
    methods are also available.
    
    Euler:
	Blends each of the rotation components independently.

    Shortest Path (Linear):
	Use the shortest path when blending rotations between two inputs,
	with a constant rate of rotation. All 3 rotations (RX, RY, RZ) must
	be enabled for this option and can only be used when given two inputs.
	
    Shortest Path (Fast Linear):
	Use the shortest path when blending rotations between any number of
	inputs by trading off a constant rate of rotation. All 3 rotations
	(RX, RY, RZ) must be enabled for this option.

Weight 1:
    These weights are used to weight each corresponding input parent.

Mask 1:
    These masks are used to select which component
    of each parent is used in the blending process.

Rest Angle 1:
    The world space (euler) rotation values for the `Use Rest Angles` option.

Rest Angle Order 1:
    The rotation order for the corresponding `Rest Angle` values.

Normal Offset:
    When exactly three parents are input, the child
    position may be offset in the direction perpendicular to the
    triangular plane they form.

Orient Axes:
    When exactly three parents are input this
    option will orient the child's local axes to match the
    orientation of the parents as follows:

    First Parent:
	    Axes center
    Second Parent:
	    Axes +X
    Third Parent:
	    Axes +Y

== Sequence ==

Sequence:
    When the __Type__ is set to __Sequence__, this value controls which input parent contributes to the child's position. It can be used to animate a child from one parent to another. A
    sequence outside the range of inputs is interpreted as unparenting the child.

Shortest Path Rotation Blending:
    Use the shortest path possible when blending rotations between two inputs.

Ignore Scales From Inputs:
    Remove the scales from the input transforms before blending.

== Constrain ==

Sequence:
    When the __Type__ is set to __Constrain__, this is similar in operation except no 'popping' occurs when transferring from one parent to another.

Reset Frame:
    Since this behavior is state-dependent this value allows the child to reset itself (ie. zero any
    accumulated transform) at the frame.

[Include:common#transform_tab]

== Misc ==

[Include:misc_parms]

