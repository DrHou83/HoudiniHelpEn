= Copy and Transform =

#type: node
#context: sop
#internal: copyxform
#icon: SOP/copyxform
#tags: copy, model, flip

"""Copies geometry and applies transformations to the copies."""

Creates copies of geometry and applies successive transformations to them.  The
transformations are cumulative and the original selection isn't transformed.

The original copy is included in the copy number.  This makes it easier
when making more than one copy as you can specify the final number of
objects rather than the number of copies.

The original geometry isn't deleted even if a source group is selected.
Use a blast sop to extract a subset if the rest of the geometry isn't
desired.

@parameters

Source Group:
    A subset of input primitives to copy from.

Total Number:
    #id: ncy

    The total number of objects to end up with.  This includes the original geometry.

Pack and Instance:
    Pack the input geometry into an Embedded Packed primitive before copying. This results in the input geometry being shared (instanced) by each copy rather than being duplicated for each copy.

    This only works if no source group is specified.

Transform Cumulative:
    Each copy is transformed relative to the previous.

Transform Order:
    Order transformations occur.

Rotate Order:
    Order rotations occur.

Translate:
    #id: t

    Translation along xyz axes.

Rotate:
    #id: r
    
    Rotation about xyz axes.

Scale:
    #id: s

    Non-uniform scaling along xyz axes.

Shear:
    Amount of shearing. The three values represent X on XY plane, X on XZ plane, and Y on YZ plane respectively.

Pivot:
    #id: p

    The local pivot point of the copy.

Uniform Scale:
    #id: scale

    Uniform scaling.

Output Group Prefix:
    The prefix of the group to create for each copy.  This will be suffixed by the copy number, starting with copy 0.

Copy Number Attribute:
    The primitive attribute to put the copy number into, starting with copy 0.  Uncopied primitives will get a copy number of -1.

@related

- [Node:sop/copy]
- [Node:sop/copytopoints]

