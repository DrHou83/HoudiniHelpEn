= Attribute Swap =

#type: node
#context: sop
#internal: attribswap
#icon: SOP/attribswap
#tags: attrs

"""Copies, moves, or swaps the contents of attributes."""

* It is sometimes useful to make a copy of an attribute before doing some destructive operations.

* This node always applies to all values of the attribute in the input. There is no "Group" field to limit the operation to certain components.

* You can use patterns in the __Source__ and __Destination__ fields to swap/copy/move multiple attributes at once. For example, you can copy all `left_*` attributes into `right_*` attributes.

        
@parameters

Number of Swaps:
    The number of swaps/copies/moves to do. The node performs the operations _in order_.

Enable:
    #id: enable#
    
    You can turn is off to disable this individual swap/copy/move. This may be useful for seeing the effect of a swap or disabling a swap while setting up the rest of the network.

Method:
    What to do with the attributes.

    Swap:
        Swap the values of the two attribute in-place. If one of the attributes doesn't exist, this acts like Copy.
        
    Move:
        Renames the source attribute to the destination name. If an attribute with the destination name already exists, it is deleted and replaced. This is the same as the [Attribute Rename SOP|Node:sop/attribute] with __Overwrite Existing Attributes__ turned on.

        You cannot move the point attribute `P` since it must always exist. If you try to move `P` the node will copy instead.

    Copy:
        Copies the source attribute to the destination name. If an attribute with the destination name already exists, it is deleted and replaced.

Class:
    The level of geometry the attribute(s) exist at: vertex, point, primitive (face), or detail (entire geometry).

Source:
    An attribute name or pattern to swap/move/copy from. If this is a pattern, the __Destination__ should also be a pattern with corresponding wildcards (see [Attrib String Edit|Node:sop/attribstringedit] for more information).

Destination:
    An attribute name or pattern to swap/move/copy to. If this is a pattern, the __Source__ should also be a pattern with corresponding wildcards (see [Attrib String Edit|Node:sop/attribstringedit] for more information).

Type Info:
    What to do with the extra metadata on the attributes describing what type of information they contain.

    For example, when stashing an attribute like `P`, you probably don't want the stashed attribute to transform with successive deformers.  In that case you would use "Preserve Destination" so ensure the new attribute has no transform hints. You would also use "Preserve Destination" if you copied attribute back onto `P`, so `P` would keep its transform hint.

    Copy Source:
        The type info is copied/moved/swapped along with the values.

    Preserve Destination:
        The type info is not copied/moved/swapped. If the destination attribute already existed, its type info is used, otherwise the destination has no type info.

        
@locals

[Include:standardvariables]


@related

- [Node:sop/attribute]
- [Node:sop/attribcopy]
- [Node:sop/attribcreate]
- [Node:sop/attribmirror]
- [Node:sop/attribpromote]
- [Node:sop/attribtransfer]
- [Node:sop/point]
- [Node:sop/primitive]
- [Node:sop/vertex]
