= Group =

#type: node
#context: sop
#internal: groupcreate
#icon: SOP/groupcreate
#tags: groups

"""Generates groups of points, primitives, or edges according to various criteria."""

== Overview ==

Elements can occur in more than one group. Groups are used in many parts of the Parameter Editor to specify which portions of input geometry you wish an operator to act upon.

You can also create ordered groups. To do so, enable the __Ordered__ checkbox.

This operator is very powerful and is ideal for combining geometry that is
similar. For example, all the primitive geometry of a group of door
structures for a three-dimensional architectural model could be
grouped together and consequently scaled and re-sized together using
a [Transform node|Node:sop/xform]. Works in conjunction with most
filter nodes.

Group name specifiers become very powerful when you use 
[pattern matching|/model/groups#manual] in your group specifiers.

[Include:/shelf/groupgeometry#includeme]

TIP:
    When using the [hotkeys to select edges|/basics/select] to group, 
    press ((Tab)) once the selection is complete (instead of ((Enter))), 
    and select the __Group Geometry__ operation in the [tab menu|/basics/tabmenu].

== Creating groups based on point attributes ==

You can create groups based on point/primitive attributes using the __Base Group__ tab and [group specification|/model/groups#manual] syntax.

For example, to create a group containing all points with Y position greater than `0`:

# In the parameter editor for the Group node, click the __Base Group__ tab.

# In the __Base Group__ field (below __Base Group__), set value to `@P.y>0`

In this example, `P` is the name of the position vector attribute, `.y` takes the Y component of the vector, and `>0` selects points where the component is greater than 0. See the `@` [group specification syntax|/model/groups#manual] for more information. Note that the `@` syntax does not allow spaces.

@inputs

Source geometry:
    The geometry on which to create the groups.

Bounding object:
    Bounding geometry. (Only works for point
    groups when selecting by bounding geometry.)

    Accepts all geometry.

@parameters

Group Name:
    #id: groupname

    The name of the group to create.

Group Type:
    #id: grouptype

    Whether to create a primitive, point or edge group.

Initial Merge:
    #id: mergeop

    How to resolve collisions between the newly created group with an already
    existing group.

    Replace Existing:
        The newly created group will replace the existing group.
        
    Union With Existing:
        The group will consist of the union between the newly created group
        and the already existing group.
        
    Intersect With Existing:
        The group will consist of the intersection between the newly created
        group and the already existing group.
        
    Subtract From Existing:
        The group will consist of the contents of the already existing group
        that are not also in the newly created group.

=== Base Group ===

Enable:
    #id: groupbase
    
    Enables grouping by pattern.
    
Base Group:
    #id: pattern
    
    Enter the pattern to be grouped. This handles normal adhoc group syntax.
    
Create Ordered:
    #id: ordered

    Orders the points/primitives in the group in the order they
    are entered. Useful when skinning.
    
Geometry Type:
    #id: geotype

    What sort of primitives to allow in the group.

=== Keep in Bounding Regions ===

Enable:
    #id: groupbounding
    
    Enable grouping by bounding volume.
    
Bounding Type:
    #id: boundtype
    
    Shape of bounding volume.

Size:
    #channels: /sizex /sizey /sizez

    Size of bounding volume.

Center:
    #channels: /tx /ty /tz

    Center of bounding volume.

Iso:
    #id: iso

    The iso surface of volume to do the grouping with.  Points
    whose volume value are less than this will be grouped.  A value of 0
    is good for SDF volumes.  For fog volumes, use a
    value of 0.5 and turn on __Invert Volumes__ for best results.

Invert Volume:
    #id: invertvolume

    Inverts sense of being inside the volume.

Include Partially Contained Entities:
    #id: includenotwhollycontained

    Include entities that are not wholly contained within the bounding object.
    For example, an edge might cross into a bounding box but neither point
    is in the bounding box.

=== Keep by Normal ===

Enable:
    #id: groupnormal
    
    Enable grouping by normal.
    
Backface from:
    #id: camerapath

    Groups primitives facing away from this object.

    NOTE:
        Unlike grouping by normal this operation will remove items that satisfy the backface condition from any group created via another tab. If no other group is created, this operation will add satisfying items.
    
Non-Planar Polys:
    #id: nonplanartol

    Groups polygons that are non-planar given the tolerance.

    NOTE:
        Polygons that are non-planar will be added to the group regardless of the other tabs.

Direction:
    #id: dir

    Normal direction to group by.
    
Spread Angle:
    #id: angle

    Deviation from the direction to allow in the group.
    
=== Include by Edges ===

NOTE:
    Points, primitives, and edges that match the edge grouping rules will be in the final group regardless of the other tabs.

Enable:
    #id: groupedges
    
    Enables edge grouping.

Min Edge Angle:
    #id: minedgeangle

    Groups primitives with at least this angle between their normals. For edge
    groups, an edge is included in the group if the two primitives that share 
    it satisfy this angle requirement.

Max Edge Angle:
    #id: maxedgeangle

    Groups primitives with at most this angle between their normals. For edge
    groups, an edge is included in the group if the two primitives that share 
    it satisfy this angle requirement.

Edge Angle Uses Angle Between Edges:
    #id: edgeanglebetweenedges

    For edge groups only, when this option is checked edges are included
    in the group based on the angle between themselves, instead of the angle
    between the primitives that share them.

    Each edge is compared against all other edges that share a point
    with it.

Min Edge Length:
    #id: minedgelen

    Groups edges that have at least this length.

Max Edge Length:
    #id: maxedgelen

    Groups edges that have at most this length.

Edge Depth:
    #id: edgestep

    Number of edges away from the points in Point Group.

Point Group:
    #id: edgeptgrp

    Points around which group is centered.

Unshared Edges:
    #id: unshared
    
    Groups all points/primitives/edges with unshared edges. For edge groups,
    an edge is added to the group if it only has one primitive adjacent to it.

Create Boundary Groups:
    #id: boundarygroups

    Create groups containing surface boundary points.

@related

- [Node:sop/delete]
- [Node:sop/partition]
- [Node:sop/groupcombine]
- [Node:sop/groupdelete]
- [Node:sop/groupexpression]
- [Node:sop/grouppromote]
- [Node:sop/grouprename]
- [Node:sop/grouptransfer]
- [Node:sop/groupcopy]
- [Node:sop/grouptransfer]

