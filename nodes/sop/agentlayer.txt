#type: node
#context: sop
#internal: agentlayer
#icon: CROWDS/agentlayer

= Agent Layer =

"""Adds a new layer to agent primitives."""

This node creates custom agent layers which can be used to add variations to the look of the agent.
A layer specifies an assignment of shapes from the agent's shape library to transforms in its rig.
New geometry shapes can be added to the shape library and then attached to specific transforms.

@parameters

Group:
    The agents to add the new layer to.

Layer Name:
    The name of the new layer.

Keep External References:
    #id: keepexternalref
    If new shapes are being added to the shape library, a copy will first be made so that the modifications do not affect other agents that reference the original shape library (such as those in the input SOP's geometry).
    If this option is enabled and the original shape library referenced a file on disk, the new shape library will be marked as _including_ the original shape library.
    In this situation, when the agent is saved to a geometry file, the path to the original shape library is saved out along with any new shapes that were not included from the original library.
    Otherwise, the entire shape library will be saved to the geometry file and the original shape library file is not referenced.

Set as Current Layer:
    Sets the current layer of each agent to the new layer.

Set as Collision Layer:
    Sets the collision layer of each agent to the new layer.

Copy Source Layer:
    Specifies whether to use an existing layer as the starting point for the new layer. All of the shape bindings from the __Source Layer__ will be copied.

Source Layer:
    If __Copy Source Layer__ is enabled, specifies the name of an existing layer to copy shape bindings from.

Source Layer Bindings:
    Specifies a pattern of transform names for which shape bindings should be copied from the __Source Layer__.
    The pattern follows the same syntax as the [match|Vex:match] VEX function.

Add Shapes by Name:
    For every unique value of the __Name Attribute__, a shape will be added to the shape library using the primitives from the __Shape Geometry Path__ that have that attribute value.
    Shape bindings will be automatically added to the layer for any shapes whose name matches the name of a transform in the agent's rig.

Shape Geometry Path:
    Specifies the geometry to use when __Add Shapes by Name__ is enabled.

Name Attribute:
    Specifies the primitive string attribute used to identify primitives belonging to each shape in the __Shape Geometry Path__.

Layer Bindings:
    Specifies the number of shape bindings that should be added.

Transform Name:
    Specifies which transform in the rig the shape should be attached to.

Shape:
    The name of an existing shape from the agent's shape library that should be attached to the __Transform Name__.

Add Shape:
    If enabled, adds a new shape to the agent's shape library and attaches it to the __Transform Name__.

SOP Path:
    The SOP geometry for the new shape.

Shape Name:
    A unique identifier for the new shape.

Bounds Scale:
    Specifies a multiplier for the size of the shape's bounding box when computing the layer's bounds.
    See the [Agent Primitive help page|/crowds/agents#boundingbox] for more information on how an agent's bounding box is computed.

Keep Position When Attaching:
    Specifies that the new shape should be transformed before being added to the shape library so that its current world position will be maintained after being attached to the __Transform Name__.

Translate:
    Specifies the translation component of a transform to be applied to the shape before adding it to the shape library.

Rotate:
    Specifies the rotation component (in degrees) of a transform to be applied to the shape before adding it to the shape library.

Scale:
    Specifies the scale component of a transform to be applied to the shape before adding it to the shape library.

@inputs
    Agents:
        Agent primitives to be used in crowd simulation.

@outputs
    Agents:
        Agent primitives to be used in crowd simulation with additional layer and shape information.

@related
- [Node:sop/agent]
- [Node:dop/crowdsolver]
