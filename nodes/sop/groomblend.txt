#type:     node
#context:  sop
#internal: groomblend
#icon:     SOP/groomblend

= Groom Blend =

"""Blends the guides and skin of two grooms."""

@parameters

== General ==

Group Type:
    #id: grouptype

    The type of input group.

Group:
    #id: group

    A group to use for masking. Any operations will only be applied to the
    primitives or points within this group.

Blend:
    #id: blend

    [Include:fur_common#opblend]

    [Include:fur_common#parmoverride]

== Guides ==

Match Primitives by Attribute:
    #id: matchprimsbyattrib

    Blends A's guides with guides in B that have the same id, rather than simply using the guide with the same primitive number. This only has an effect when the __Match Attribute__ specified below is found on both guide geometries.

    With this enabled, guide blending works even when the two guide inputs don't have matching primitive order.

    This also works when guides are missing from either input. If guide are missing in B, the corresponding guides in A remain unchanged. Guides that don't exist in A are ignored and don't appear in the output.

Match Attribute:
    #id: matchprimsattrib

    The primitive attribute to match guides with. Defaults to the standard `id` attribute, which grooming tools create for both guides and generated hair.

Interpolate Point Values (Differing Segment Counts):
    #id: pointinterp

    Interpolates point attributes by looking up the value at parametric curve locations. This makes the blending independent of segment count.

Points:
    #id: guidepointattribs

    The guide point attributes to blend.

Primitives:
    #id: guideprimattribs

    The guide primitive attributes to blend.

== Skin ==

Points:
    #id: skinpointattribs

    The skin point attributes to blend.

@related
- [Node:sop/guidemask]
- [Node:sop/groomswitch]
