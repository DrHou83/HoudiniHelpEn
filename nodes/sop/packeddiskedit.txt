#type: node
#context: sop
#internal: packeddiskedit
#icon: SOP/packeddiskedit

#tags: pack, model

= Packed Disk Edit =

"""Editing Packed Disk Primitives."""

This SOP can be used to edit both Packed Disk primitives and Packed Disk
Sequence primitives.

Packed disk primitives contain an `unexpandedfilename` intrinsic which
governs which file on disk they load from.  This operation allows you
to easily perform regular expression replacement on that property.
This can be used to re-home primitives with absolute paths to new
locations.

When editing a Packed Disk Sequence primitives, the SOP lets you choose which
index of the sequence to use.  The index can be a floating point number, which
will blend between different disk files during rendering.

NOTE:
    Packed disk primitives also contain a `filename` intrinsic.  This is what
    the filename got expanded to.  It is read-only, to adjust it one must
    instead write to the `unexpandedfilename` intrinsic.

@parameters

Group:
        The group of primitives affected by the operation.

Source Pattern:
	The pattern to match for replacement.

Destination Pattern:
	The pattern to replace the source pattern with.  Note that Houdini will expand any variables prior to using as a destination pattern.  A destination pattern of `$HIP` will thus not result in `$HIP` in the `unexpandedfilename`, but will result in the full expanded path.  Use `\$HIP` to get the variable `$HIP` embedded.

Expand Filename:
	When a packed disk primitive wishes to read the geometry it has to know if the value in unexpandedfilename needs to be still expanded.  Usually the File SOP will have fully expanded, so this is turned off.  However, if you wish to embed a variable such as `$HIP` you need to turn this on.

	Note if your filename contains any `$` characters you will have to have this off to avoid double-expansion.  But for most file names it is safe to leave it enabled.

Sequence Index:
	When editing a packed disk sequence, this `index` selects which disk file will be rendered.  The fractional component of the `index` will determine the blending amount between disk files that have matching topology.

@related
    - [Node:sop/file]
    - [Node:sop/pack]
    - [Node:sop/packededit]
