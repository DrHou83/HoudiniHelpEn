= Stash =

#type: node
#context: sop
#internal: stash
#icon: SOP/stash
#tags: network, util

"""Caches the input geometry in the node on command, and then uses it as the node's output."""


== Overview ==

When you click __Stash input__, the node will cook the input and cache the geometry in a data parameter. The node does not otherwise cook its input and will simply output the cached geometry. (You can even disconnect the input and the node will continue to output its stored geometry.) You can click __Stash input__ again to re-cache if the input changes.

This node is conceptually very similar to [locking|/network/flags#sop] a Null SOP, however it has several additional features:

* The interaction is slightly more convenient.

* You can modify or overwrite the cached geometry with [Hom:hou.Geometry] objects through scripting.

* You can link the geometry parameter to a parameter on a parent [asset|/assets/].  This allows assets to inject geometry into a network without making the contents editable.

* The node never passes the input directly to the output, so Houdini doesn't see downstream nodes as depending on upstream nodes. This is useful if a live connection would create a dependency cycle.


== Tips and notes ==

* The stashed geometry is saved as part of the node instance when you save the scene, so stashing large geometry can bloat the size of the `.hip` file.

* You can discard the cached geometry by disconnecting the node's input and clicking __Stash input__.

* Because the caching process is manual, it is independent of time. For example, you can run a simulation process (for example, a terrain erosion), cache the final geometry, disconnect the simulation, and then go back to frame 1 and use the geometry in an animation.


@parameters

Geometry Stash:
    The data parameter (internal name `stash`) where the node stores the geometry.
    
Stash Input:
    Click to cook the input and cache its geometry in the data parameter above. Once geometry is cached, the node will output the cached geometry.


@related

- [Node:sop/file]


