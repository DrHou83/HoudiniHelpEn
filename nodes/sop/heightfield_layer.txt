= HeightField Layer =

#type:     node
#context:  sop
#internal: heightfield_layer
#icon:     SOP/heightfield_layer

"""Composites together two height fields."""

This node composites the height field layers in the first ("base") input with the layers in the second ("layer") input. The third input takes an optional mask.

The node will properly composite volumes that aren't axis aligned (it will use the grid of the base input). So you can position and rotate the composited volume in 3D space before compositing.


@parameters

Layer Mode:
    #id: mode
    
    How to composite the layers.
    
	Replace:
        Replace the first layer with the second layer.
        
	Add:
        Add the values in the first layer to the values in the second layer.
        
	Subtract:
        Subtract the values in the first layer from the values in the second layer.
        
	Difference:
        Set the output to the difference between the values in the first layer and the values in the second layer.
        
	Multiply:
        Multiply the values in the first layer by the values in the second layer.
        
	Maximum:
        Use the larger of the value from the first layer and the value from the second layer.
        
	Minimum:
        Use the smaller of the value from the first layer and the value from the second layer.
        
	Blend:
        Blend the values from the first layer and second layer by a percentage set in the __Blend__ parameter. 
    
Blend:
    #id: blend
    
    The amount to blend the second layer with the first layer, when __Layer mode__ is "blend". A value of `0` uses the first layer, a value of `1` uses the second layer, a value of `0.5` blends equally between the two layers.

Layers:
    #id: layer
    
    A space-separated list of the layers to composite together from each input. For example, `height mask` will composite the `height` layers from each input, and the `mask` layers from each input. The default is `*`, meaning composite all layers.

    
== Masking ==

If you use a mask input, the node only composites in the masked areas, and leaves the first input untouched in other areas.

[Include:_heightfield_common#masklayer]
    
Mask Strength:
    #id: maskweight
    
    Scales the values in the mask. You can use this to make the mask stronger or weaker only in this node.
    
Invert Mask:
    #id: invertmask
    
    Inverts the mask in this node, so compositing only happens in unmasked areas, and leaves the first input untouched in masked areas.


== Remapping ==

Base Offset:
    #id: base_bias
    
    Add this to the values in the first input before compositing.
    
Base Scale:
    #id: base_scale
    
    Multiply the values in the first input by this before compositing.
    
Layer Offset:
    #id: layer_bias
    
    Add this to the values in the second input before compositing.
    
Layer Scale: Multiply the compositing layer voxel values by a given value.
    #id: layer_scale
    
    Multiply the values in the second input by this before compositing.
    
Final Offset: Increase or decrease the final composited layer.
    #id: final_bias
    
    Add this to the values in the output after compositing.
    
Final Scale: Multiply the final composited layer's voxel values by a given value.
    #id: final_scale
    
    Multiply the values in the output by this after compositing.
    
    
== Output Clamping ==

Clamp Minimum: Minimum clamped values.
    #id: clampmin
    
    Turn on the checkbox to clamp any values below this number in the output.
    
    
Clamp Maximum: Maximum clamped values.    
    #id: clampmax
    
    Turn on the checkbox to clamp any values above this number in the output.

