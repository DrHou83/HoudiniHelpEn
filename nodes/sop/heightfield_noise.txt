= HeightField Noise =

#type:     node
#context:  sop
#internal: heightfield_noise
#icon:     SOP/heightfield_noise

"""Adds vertical noise to a height field, creating peaks and valleys."""

See also [Height Field Distort|Node:sop/heightfield_distort], which adds moves/swirls terrain features across the grid.


@parameters

[Include:_heightfield_common#noiselayer]
    
[Include:_heightfield_common#masklayer]
    
[Include:_heightfield_common#combine]
    
[Include:_heightfield_common#blend]

Center Noise:
    #id: centernoise
    
    Offsets the noise so it centers around 0. This is useful for adding noise to terrain. If you are using a Worley (cellular) noise type, you should turn this off.

Amplitude:
    #id: amp
    
    Scales the amount of vertical displacement.

Element Size:
    #id: elementsize
    
    Scales the noise pattern outward across the grid.

Scale:
    #id: elementscale
    
    Scales the displacement in X, Y, and Z. This may be useful to stretch the noise pattern in one direction across the terrain.
    
Offset:
    #id: offset
    
    Moves the noise pattern across the grid.


== Noise settings ==

Noise Type:
    #id: basis
    
    The type of noise to generate, Different algorithms generate patterns with different characteristics.
    
Fractal:
    #id: fractal
    
    Whether to do multiple iterations of smaller noise on top of bigger noise.
    
    None:
        Does not add any additional noise on top of the basic noise.
        
    Standard:
        Adds pseudo-random noise on top of the basic output.
        
    Terrain:
        Adds noise like "standard" but dampens the noise in the valleys, which generates more realistic-looking terrain.

    Hybrid Terrain:
        Like terrain, but with more sharpness in the valleys. 

Max Octaves:
    #id: oct
    
    Limits the fractal noise to a certain number of iterations.

Lacunarity:
    #id: lac
    
    The frequency increment between iterations of fractal noise added to the basic output. Note you can use negative values.
    
Roughness:
    #id: rough
    
    Fractal roughness. The roughness parameter determines the coarseness of the noise.
    
Flow Rotation:
    #id: flowrot
    
    The rotation of the "swirl", from 0 to 1, when __Noise Type__ is "Flow".
    
    Because this parameter is fractional and wraps around, if you try to use $F to animate it, it will always look the same. Use something like the time or the frame number divided by the total number of frames instead.


== Post Processing ==

Fold:
    #id: fold
    
    Only allow absolute values in the noise output.
    
Complement:
    #id: complement
    
    Turns the noise upside-down (outputs `1 - x` for the noise values).

Gain:
    #id: gain
    
    Increases or decreases the contrast from 0.5 in the output.
    
Bias:
    #id: bias
    
    Moves the output down or up toward 0 or 1.

Clipping Minimum:
    #id: clipmin
    
    Clamps any noise value below this. Has the effect of cutting off all elevation changes at a certain minimum height.
    
Clipping Maximum:
    #id: clipmax
    
    Clamps any noise value above this. Has the effect of cutting off all elevation changes at a certain maximum height.


== Distortion ==

Enable Lattice Warp:
    #id: dolwarp
    
    Adds "stringiness" or "wiriness" to standard noise.

Accumulate Lattice Warp:
    #id: accuml
    
    When lattice warp is on, this accumulates the warp for each iteration (octave) of added fractal noise.

Lattice Warp:
    #id: disp
    
    How much "stringiness" to add to the noise.
    
Freq:
    #id: dispfreq
    
    The frequency of the "stringiness".

Enable Gradient Warp: 
    #id: dogwarp
    
    Widens the peaks and valleys of the noise.
    
Accumulate Gradient Warp:
    #id: accumg

    When Gradient warp is on, this accumulates the warp for each iteration (octave) of added fractal noise.

Gradient Warp:
    #id: gflow
    
    How much to widen the peaks and valleys of the noise.


@related

- [Node:sop/heightfield_distort]
