= Load image data into the compositor =

:task:Load image data from a file or files:
    # In a compositing network, use the  [tab menu|/basics/tabmenu]  to
      create a [File node|Node:cop2/file], or use the 'Add File
      Operator' dialog (((`))) to load one or more image sequences
      (one [File node|Node:cop2/file] will be created for each
      sequence). When using 'Add File Operator, you can skip step 2
      as it is done automatically.

    # Choose the file or sequence to load in the __File__
      parameter.

      The node interprets paths without a frame number (for example,
      default.pic, butterfly1.pic) as single images. If the filename
      numbers, it considers the last number (ignoring the extension)
      to be the frame number of the image.

      For numbered files, the node calculates the frame range
      automatically by searching the other files in the directory.
      The node will replace missing or bad frames with black or
      neighboring frames, depending on the value of the __Missing
      frames__ parameter. The node cannot detect missing frames at
      the beginning or end of the sequence, though it will replace
      bad frames.

    # You can optionally load a lower-resolution "proxy" version of
      large file(s) to make compositing faster, if you have the
      proxy files available. On the __Proxy__ tab, enter the
      filename pattern for the proxy files in the appropriate
      field.

      For example, if you have half-resolution proxy images, choose
      one of the half-resolution files in the __1/2-Res Proxy__
      field.

      If some frames don't have proxy images, Houdini will just use
      the full-sized frame.

:task:Render directly into the compositor:
    * Use the [Render node|Node:cop2/render] to load an image or
      sequence of images from a  [render output driver
      (ROP)|/nodes/out] .

:task:Get image data from another compositing node (fetch):
    * Use the [Fetch node|Node:cop2/fetch] to load a sequence of
      images from another COP, even if it's in a different network.

:task:Create color and gradient fills:
    * See  [generating fills|fills] .



