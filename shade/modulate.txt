= Modulating texture values =

"""How to use utility VOPs to modify textures in your materials."""


== Overview ==

When [building shaders|/shade/build] in VOPs, you'll often want to modify the output of nodes to suit your needs.


== Example ==

In this example, a [Node:vop/principledshader] has been applied to a sphere. It's roughness input is connected to a [Node:vop/surfacecolor] VOP with a black & white checkerboard texture. The luminance VOP isn't strictly necessary, but makes it easier to work with the values later on.

[Image:/images/shade/modulate_network1.png]

This results in perfectly sharp reflections where the texture values are black and extremely dull reflections where they are white.

_In the figure below, the left side shows the rendered results, the right side shows the roughness values_

[Image:/images/shade/modulate_render1.png]

You can use a [Node:vop/fit] VOP to modify the value range of the texture. This allows you to tweak the range of roughness values without having to modify your texture.

TIP:
    You can create the [Node:vop/fit] VOP using the Shader Effects menu, ((MMB)) on the __rough__ input to bring this up, then ((LMB)) __Filter__ > __Fit__. This will automatically promote the range inputs to the parent SHOP.

[Image:/images/shade/modulate_network2.png]

We'll leave the __Source Min__ at `0` and __Source Max__ at `1`. We'll set __Destination Min__ to `0.3` and __Destination Max__ to `0.6`. This maps texture values of `0` to an output value of `0.3` and texture values of `1` to an output value of `0.6`. Anything in between is interpolated linearly.

As you can see below, this leads to a much more subtle variation in roughness. Tools like this make it quick and easy to tweak the final result without going back to texture painting.

[Image:/images/shade/modulate_render2.png]

== Other nodes ==

The following are some nodes you may find useful for this type of filtering.

* [Node:vop/fit]
* [Node:vop/efit]
* [Node:vop/reshapevalue]
* [Node:vop/rampparm]


