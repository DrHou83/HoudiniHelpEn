= Searching <| the help =

== How to ==

The search box in the top right of every Houdini help page lets you search the help. Just click and start typing.

=== Word searches ===
#display: pull left

Type the words you want to search for, separated by spaces.

{{{
render quality
}}}

=== Boolean searches ===
#display: pull left

By default, the search results only show documents that match *all* the words you type (an "AND" search). You can use `AND`, `OR`, `NOT`, and parentheses to do boolean searches.

{{{
render AND (quality OR time) NOT shadow
}}}

=== Phrase searches ===
#display: pull left

To search for a phrase (a series of words next to each other), put the phrase in quotation marks.

{{{
"render quality"
}}}

=== Prefix searches ===
#display: pull left

To search for all words beginning with a certain prefix, add an asterisk (`*`) to the end of the word.

{{{
real*
}}}

(Note that the search automatically expands word stems, so searching for `renders` also finds occurances of `render`, `rendering`, `rendered`, and so on.)

== Shortcuts == (shortcuts)

You can quickly search only certain types of pages by typing a "shortcut" in the search box along with the words to search for.

For example, to search for SOP docs containing the word `brush`:

{{{
!s brush
}}}

You can configure your own shortcuts in the file `HOUDINIPATH/config/Help/bookish.cfg` like this:

{{{
#!python
EXTRA_SHORTCUTS = [
    {
        "shortcut": "xs",
        "desc": "Our custom SOPs",
        "query": "namespace:xyzcorp context:sop"
    },
    {
        "shortcut": "xd",
        "desc": "Our custom DOPs",
        "query": "namespace:xyzcorp context:dop"
    }
]
}}}

See below for how to create useful shortcut queries.

== Field searches ==

=== Title and content ===
#display: pull left

The search indexes several different "fields" for each document, such as the _title_, the _content_, and each document's _type_ (such as `node`). Normally when you type a word, the search looks for the word in the _title_ and _content_ fields. However, you can search for words in other fields by prepending a word (or phrase) with the name of a field and a colon, for example:

{{{
title:render
}}}

=== Type ===
#display: pull left

The _type_ field is useful for filtering results.

:col:
    * `type:node`
    * `type:expression`
    * `type:hscript`
    * `type:vex`
:col:
    * `type:hommethod`
    * `type:homclass`
    * `type:property`

For example, if you're looking for HScript commmand docs containing the word shader:

{{{
shader type:hscript
}}}

=== Context ===
#display: pull left

The _context_ field is used for both the network type of node documentation, and the context of vex functions. For example, to search for the word `copy` only in the node documentation of surface nodes:
    
{{{
copy type:node context:sop
}}}
    
To search for the word `light` only in VEX functions that are available in the "surface" context:
    
{{{
light type:vex context:surface
}}}

=== Other fields ===
#display: pull left

Some other fields that might be useful for searching:

* `tags`
* `path` (For example, `path:/ref/panes/*`)
* `namespace`
* `version`
* `parent`

