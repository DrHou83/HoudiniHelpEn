= Volume =

#type: visualizer
#internal: vis_volume
#icon: VIEW/visualization_slice
#tags: visualization, volume, slice
#helpid: h.visualizers.vis_volume

"""Visualizes a cross-section of a volume."""

== Overview ==

The volume visualizer lets you view the values in a cross-section of a volume, using color, vectors, or advection trails.

See [visualizers|/basics/visualizers] for more information.

[Image:/images/visualizers/volume_color.png]

== Visualizing pyro fields ==

When visualizing pyro fields such as `vel` (velocity) and `temperature`, remember the following:

* In the `pyro_import` object, put the display flag on the `import_pyrofields` [DOP I/O|Node:sop/dopio] node.

    To avoid having to put all the settings back the way they were before rendering, you may prefer to duplicate the `pyro_import` node and put the display flag on the copy.

* in the `import_pyrofields` node's parameters, on the __Fields__ tab, make sure the field you want to visualize is imported, and set the __Visualization__ for the field to something other than "Invisible".

* You may want to turn off import of other fields.

@parameters

Source group:
    You can specify up to three primitives to visualize, using [group syntax|/model/groups#manual]. For a volume, this will usually be a field accessed using `@name=` syntax. (for example `@name=vel` or `@name=temperature`).
    
    If you specify 2-3 scalar fields, you can visualize them as if they were a 2-3 component vector field. This might be useful in some cases to visualize the relationship between two scalar fields at the same time in a color map.

Orientation:
    Choose the orientation of the cross-section.

Offset:
    How far into the volume to display the cross-section. Drag the slider to move the cross-section through the volume.

Ghosting level:
    Controls the visibility of the volume. You can make the volume completely invisible to see only the visualiztion.
    
    The number of levels of visibility available depend on the __Antialias samples__ setting on the [Display Options window|/ref/windows/displayopts_3d]'s __Effects__ tab. Better graphics cards can use a higher setting and get more possible visibility levels.
    
== Style ==

Visualize values as:
    How to display the voxel data in the cross section. Different styles have different controls.
    
    [Colors|#style_colors]:
        You can visualize a scalar field using a color ramp, or a vector field as RGB, or convert a vector field to a ramp using various functions such as the magnitude of the vector.
        
        [Image:/images/visualizers/volume_color.png]
    
    [Vectors|#style_vectors]:
        Draws a line from the point based on a vector field's direction and length.
        
        [Image:/images/visualizers/volume_vectors.png]
    
    [Trails|#style_vector_trails]:
        Visualizes trails left by imaginary particles advected through a velocity field.
        
        [Image:/images/visualizers/volume_trails.png]
    
== Style: Colors == (style_colors)

[Image:/images/visualizers/volume_color.png]

[Include:marker#ramptype]

[Include:color#rangespec]

[Include:color#treatasscalar]

[Include:color#using]

=== Text labels === (style_text)

Show values as text:
    Draw the sampled values as text on the cross-section. This can quickly become unreadable for dense grids, so you can use the __Visibility__ setting to only show values around the mouse pointer. 

Color:
    Draw the values in this color.

Font size:
    The relative size of the values in the viewport.

Visibility:
    Whether to show all values, only the value under the mouse pointer, or all values within a certain radius of the mouse pointer.

== Style: Vectors == (style_vectors)

[Image:/images/visualizers/volume_vectors.png]

[Include:marker#lengthscale]

[Include:marker#normalize]

[Include:marker#arrowheads]

Coloring:
    How to color the lines representing the vectors.
    
    Fixed color:
        All quills have the same color.
    
    Vector values:
        #id: coloring_vector_values
        Use raw vector values as RGB.
    
    Vector directions:
        #id: coloring_vector_directions
        Normalize vectors, then scale and offset to the center of the color cube. This makes direction vectors visible as color regardless of magnitude and sign.

== Style: Trails == (style_vector_trails)

[Image:/images/visualizers/volume_trails.png]

Direction:
    Whether to advect the imaginary particles forward or backward through the velocity field.

Duration:
    How many "time steps" to advect the particles for. Increase this value to get longer trails. (This value has an arbitrary unit, it is not related to playback time or simulation timesteps.)
    
Per trail samples:
    How many timesteps to take within the __Duration__. Increase this to get higher-resolution trails.

Coloring:
    How to color the trails. (This color is computed at each step along the trail, so trails may change color along their length.)
    
    Fixed color:
        All trails use the same color.
    
    Vector values:
        #contentfrom: #coloring_vector_values
    
    Vector directions:
        #contentfrom: #coloring_vector_directions

== Sampling ==

Sampling rate:
    A percentage of the original volume resolution to sample at. This lets you sample at a low resolution to speed up visualization of a high-res volume, or oversample to see interpolation. For example, `1` samples at the full resolution of the volume, `0.5` samples at half the resolution of the volume.
    
Sampling grid shift:
    An offset between the sampling grid and the actual volume's grid. Values less than 0 or greater than 1 will wrap around.

Snap slicing plane to sampling grid:
    When this is on, You can only move the cross-section __Offset__ to positions on the sampling grid. When this is off, you can see interpolated sample values between grid positions.

Component order:
    Lets you shuffle the mapping between components in the field and RGB/XYZ in the visualization. This might be useful to change the direction of quills to make them easier to see, or change colors around to a more contrasty palette.

Display sampling grid:
    Draws lines on the cross-section to make the sampling grid clearer.

== Extraction ==

[Image:/images/visualizers/volume_extract.png]

Enable extraction:
    Moves the cross section away from its actual position inside the volume, to make it easier to see the visualization and the volume at the same time.

Translate:
    Moves the cross-section. Values are multiples of the volume size in each direction, so a value of `-1` or `1` will move the cross-section next to the volume.

Rotate:
    Rotates the cross-section.

Uniform scale:
    Scales the cross-section.

Transform extract relative to slicing plane:
    Makes the values in the __Translate__ and __Rotate__ fields relative to the current __Orientation__ of the cross-section.
