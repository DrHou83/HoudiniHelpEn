= Basics =

== Time steps and rules ==

A simulation works by looking at the current state of the world, and applying rules to transform the current state into the next state. For example, if a particle has a velocity of 1 unit in the X axis, for each iteration of the simulation (or time step), the simulation should move that particle 1 unit along X.

You can set up time-steps per frame using the Oversampling parameter on the [Icon:SOP/particle][POP Network|Node:part/popnet] node.

For each time step of the simulation, Houdini [cooks|/basics/cooking] the nodes in the particle system, evaluating their effect on the current state of the particle system.

Because particle systems work by looking at the state of the system in the current time step and updating it for the next time step, particle systems can only animate forward. If you play the [animation|/anim] in reverse, the particle simulation will not update.

Houdini has a number of default rules that update the simulation's state based on particle attributes, such as updating a particle's position based on its velocity, increasing its age, and removing dead particles. In addition to these basic updates, the operators you add to the network create additional instructions that must be applied at each time step to determine the new simulation state. If the custom behaviors you create conflict with the default rules (for example, you create a custom system for determining particle age), you can turn off default rules with the [Suppress Rule POP|Node:pop/suppress].

The default in Houdini is to calculate one time step for each frame; however, there are times when you will want to oversample the simulation to have more time steps per frame.

