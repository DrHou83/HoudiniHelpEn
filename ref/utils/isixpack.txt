
= isixpack =

"""Generates an environment/reflection map from six images representing the six sides of a cube, or a cross image."""

== Usages ==

# `isixpack [-u <<usize>>] [-v <<vsize>>] <<front>> <<right>> <<back>> <<left>> <<top>> <<bottom>> <<outimage>>`

    Combines six separate images into an environment/reflection map. The images should be rendered with viewing angles of 90 degrees, a square resolution (typically 256 x 256), and a square pixel aspect ratio.
    
    - If the output format is `.rat`, the command generates a multi-file cubic environment map.
    
        You can retrieve each individual image from the .rat file using `iconvert -i <<image_num>> <<reflect.rat>> <<outimage>>`.
        
    - If the output format is not `.rat`, the command generates a single lat-long environment map.
    
# `isixpack <<cross_image.pic>> <<map.rat>>`

    Alternative to using separate images for each side of the cube, takes a single image which is laid out in the shape of a cross (similar to the example images [here|http://www.debevec.org/Probes/]). This generates a single cubic `.rat` file.
    
    Lay out the cross image as either:
    
    table class="cells">>
        tr>>
            td>>
            td>>Top
            td>>
        tr>>
            td>>Left
            td>>Front
            td>>Right
        tr>>
            td>>
            td>>Bottom
            td>>
        tr>>
            td>>
            td>>Back
            td>>
    
    ...or...
    
    table class="cells">>
        tr>>
            td>>
            td>>Right
            td>>
            td>>
        tr>>
            td>>Top
            td>>Front
            td>>Bottom
            td>>Back
        tr>>
            td>>
            td>>Left
            td>>
            td>>

# `isixpack <<map.rat>> <<cross_image.pic>>`

    Converts an environment/reflection map back into the corresponding cross image.

== Options ==

Default output file resolution is 1024 x 512.

`-u <<usize>>`:
    Horizontal output resolution.
    
`-v <<vsize>>`:
    Vertical output resolution.
    
`-a`:
    Anti-alias the output with 3 x 3 Super sampling.

== Examples ==

Generate a cubic environment .rat file from front, right, back, left top, and bottom images:

{{{
isixpack frnt.pic rite.pic back.pic left.pic top.pic bot.pic map.rat
}}}

Generate a cubic environment .rat file from a cross HDR image:
   
{{{
isixpack kitchen_cross.hdr kitchen.rat
}}}

Display a cubic environment map:

{{{
isixpack kitchen.rat ip
}}}

To make a .rat file which is a lat-long representation of the environment
map, the environment map needs to be generated as a non-rat format initially:

{{{
isixpack front right back left top bottom stdout | iconvert stdin out.rat
}}}







