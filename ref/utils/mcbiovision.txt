= mcbiovision =

"""Converts a BioVision motion file to a Houdini script and channel file(s)."""

== Synopsis ==

{{{
mcbiovision [-e -b -d] [-c] [-v] [-j object_script]
   [-o -w -f -s -i [-n -t -l chainfile]]
   infile [outfile]
}}}

== Description ==

Converts a BioVision motion file to a Houdini script and channel file(s). You can then run the generated script to create the geometry and channels.

== Options ==

`-e`:
    Stuff parameters with expressions (chop). If you don't specify `-e`, `-b`, or `-d`, this is the default.

`-b`:
    Leave parameters blank.
    
`-d`:
    Leave parameters blank and override the created channels.
    
`-c`:
    Only create the channel file(s), not the script.

`-v`:
    Reverse joint rotation order.

`-s`:
    Name bones using only the end joint name, instead of combining the start and end names.

`-j <<script>>`:
    Set the object creation script (adds `opadd geo <<script>>` to the generated script).

`-o`:
    Create character using object joints.

`-w`:
    Create character using object joints and wire polygons.

`-f`:
    Create character using forward kinematics (FK). This is the default.
    
`-i`:
    Create character using inverse kinematics (IK).

When you specify `-f` (forward kinematics) or `-i` (inverse kinematics), the following option is available:

`-n <<num>>`:
    Specify a bone length channel type: `0` for none, `1` for always, or `2` for auto.
    
When you specify `-i` (inverse kinematics), the following options are available:

`-t`:
    Create dual bone chains with twist affectors.
    
`-l <<chainfile>>`:
    Specify a file containing a list of bone chains.
    
    Each line of the file must be in the form:
    
    {{{
    <IK chain root joint> <IK chain end affector>
    }}}

