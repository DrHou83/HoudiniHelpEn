= Operator Type Manager window =

#helpid: h.menu.tools.optypemanager h.menu.tools.optypemanager.copyotl h.menu.tools.optypemanager.mergeotl h.menu.tools.optypemanager.editcontents h.menu.tools.optypemanager.renamehda

This window lets you [manage operator type libraries|/assets/install]
and set options for how Houdini handles assets and operator type
libraries.

== Colors of definition names ==

If an operator definition name is written in black, the current definition is being used for that operator type. Names in yellow are also being used as the current definition for that operator type, but there is a more recent definition available in another operator type library. Names in red are not the current definition for the specified operator.

NOTE:
    Changing your color scheme will change these colors.

To make a definition current for an operator type, click ((RMB)) on the operator and choose __Use This Definition__. This setting overrides the global preferences on the __Configuration__ tab, and are stored in a hip file. An operator type definition that has been given these overrides are green. To removed the override, click ((RMB)) on the operator and choose __Clear Definition Preference__.

== Search box ==

The text box below the tree view lets you to search for operator
types by name. You can find the current definition, latest (last
modified) definition, or next definition in order. You can use
wildcards in the name.

For example, to find the current definition of an operator named
`MassiveBrainExplosion`, type `*Brain*` and click __Current
Definition__.

== HDA file context menu ==

This menu appears when you press ((RMB)) on the name of an operator type library file.
    
Uninstall:
    Unloads the type library and removes it from the library search
    path (that is, the OPLibraries file). This does not delete the
    actual `.hda` file, it just makes Houdini unaware of it.
    
Refresh:
    Reloads all the HDA file context menu.
    
Merge with Library:
    Merges the contents of this library with one you choose.
    
Expand/Expand All:
    Shows the contents of the HDA file.
    
Sort Ascending/Descending/None:
    Choose how to sort the files in the menu.
        
== Operator context menu ==

This menu appears when you press ((RMB)) on the name of an operator.

Type Properties:
    Opens a window for editing the custom operator's settings. This
    item is only available for the current definition of an operator
    (for example, if you have two versions of "my_operator"
    available, only the active definition will have this item in its
    context menu).
Copy:
    Copies between .hda files, which keeps the last path.
    
Duplicate:
    Makes a duplicate within an .hda, which defaults to the type's current path. 

Jump to Next Definition:
    If you have multiple definitions of a custom operator (for
    example, within the `.hip` file and on disk, or in several
    directories on disk), this item selects the next definition.
    This is useful for quickly finding all the definitions for a
    single operator.      

Show Namespace Order:
    If there are other operators of the same base name but in a different
    namespace or with a different version, then this item displays 
    a list of such operators sorted according to the precedence order.
    It is useful to determine the operator type resolution order that
    Houdini uses when an unqualified (base) name is used in scripts.
    Houdini will use the first operator in that list that best matches the
    unqualified name.

Update Time Stamp:
    Sets the custom operator's "last modified" time to now. This is
    useful if you have Houdini configured to use the last modified
    operator version and you want to rearrange the order.

Use This Definition:
    Defines which operator to use, since definitions may be located in multiple libraries.

Clear Definition Preference:
    Clears the selected operator to use. This option is only visible if after you choose __Use This Definition__ for an operator.

Delete:
    Removes the custom operator from the HDA file. You cannot delete
    an operator type if it is in use.
        
== Configuration tab ==

The options on this tab control how Houdini chooses between multiple versions of the same operator type.

Give Preference to Definitions from Index Files:
    Operators defined in index files (SHOPsurface, SUBobj) have
    priority over operators defined in HDA files.
    
Give Preference to Definitions Saved in Hip File:
    Definitions embedded in the hip file have priority over
    definitions stored on disk.
    
Give Preference to Definitions with Latest Date:
    Use the operator with the latest "last modified" time. This means the latest date stamp that the asset definition inside the HDA library file has, not the date stamp of the HDA library file on disk.

NOTE:
    If you have more than one of the priority options turned on, the
    options higher in the list have priority over the options lower
    in the list.

Save Operator Definitions to Hip File:
    Embeds copies of the HDA definitions used in the current hip
    file in the hip file. This makes the hip file larger but means
    the custom operators the hip file depends on are always
    available.

Save Definitions of Unlocked Assets to Hip File:
    If this option is turned on, definitions of assets with unlocked instances in the hip file are saved to the hip file, even if __Save Definitions to Hip File__ is turned off.
    
    NOTE:
        This option is irrelevant if __Save Definitions to Hip File__ is turned on because that option always saves all definitions to the hip file.

Display Warning for Out of Date Operators:
    If you load a hip file (or use [otrefresh|Cmd:otrefresh]) and an
    active operator is out of date, but __Give Preference to
    Definitions with Latest Date__ is not on, Houdini will pop up a
    warning.

Display Warning for Operators With Incomplete Definitions:
    Generates a warning if you load a hip file containing a node with an incomplete asset definition because a complete definition is not available.

Create backup files when saving libraries:
    Saves a backup copy of the old version whenever you modify an
    operator type library file.
    
Safeguard Operator Definitions:
    Removes the __Allow Editing of Contents__ and __Match Current
    Definition__ menu items from the node tile context menu. Turning
    this option on can protect users from modifying operator
    definitions.

Leave Values When Defaults Change:
    Don't update the parameter values of existing nodes when you
    change an operator's defaults.

Use OPlibraries Files to Find HDAs:
    This option exists for backward compatibility. If this option is turned on, Houdini scans the HOUDINI_PATH for files called OPlibraries which contain a list of HDA files to load. This is what was done in previous versions. If this option is turned off, Houdini scans HOUDINI_OTLSCAN_PATH for *.hda and loads all matching HDA files. 

    NOTE:
        If only HOUDINI_PATH is defined, then Houdini always uses the most recent .hda in the path, not the order they are defined.

Operator Type Bar:
    Controls the visibility of the Operator Type Bar that appears at the top of Parameter dialogs. This bar shows the path to the HDA file that defines the node pointed to by the Parameter dialog.

    The Operator Type Bar can be hidden completely, or it can be in a read-only mode where it simply displays the HDA path, or it can be in a mode where it presents a menu listing all HDAs that contain a definition for the asset.

Namespace Hierarchy:
    Displays the value of the HOUDINI_OPNAMESPACE_HIERARCHY used to build the
    namespace hierarchy and sort the operators with the same base name. 
    
