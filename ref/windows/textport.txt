= Textport window =

The textport lets you type [HScript commands|/commands]  and prints the results.

TIP:
    You can start typing your next command while the previous command is
    executing.

:task:Quickly paste text from the output of a previous command in the current command line:
    # Select the text you want to paste.

    # Click ((MMB)).

:task:Scroll the textport window:
    * Drag ((RMB)) to scroll up and down.

    * Press ((PgUp)) or ((PgDn)).

    * Press ((Home)) to scroll the top of the window. Press ((End))
      to scroll to the end.

== Expansion ==

    Expansion is done in the following order:

    # History substitution.

    # Alias expansion.

    # Variables and expressions.

    == History substitution ==

        Certain text patterns on the command line are replaced with the
        text of previous commands. These are mostly useful for people
        who are used to using the similar feature in UNIX shells. For
        most people, simply scrolling through the history with ((Up))
        and ((Down)) is faster.

        `!!` :
            Repeat last command.
        `!<<string>> ` :
            Repeat last command containing <<string>>.
        `!<<n>> ` :
            Repeat the <<n>>th command. To print a numbered command
            history, use the [history|Cmd:history] command.
        `!-<<n>> ` :
            Repeat the command run <<n>> commands ago.
    
    == Alias expansion ==

        You can define an _alias_ that stands for another string. This
        is useful for replacing long, frequently used command lines with
        a short name.

        You can define aliases with the [alias|Cmd:alias] command, or in
        the  [Aliases and Variables|/ref/windows/alias]  window
        (__Window > Aliases and Variables__).

        NOTE:
            Houdini does not support nested aliases. The definition of
            an alias cannot itself contain an alias.

== Limitations ==

    * The maximum line length (after expansion) for a Houdini command is
      8 Kb.

    * The maximum number of arguments on a command line is 1024.

    * The maximum number of number of nested _if_ statements in a single
      source file is 128.

    * The maximum number of source files is limited by the system limit
      on open files.

    * There is no limit for nested loops.

    * Linux: Due to event handling problems in the implementation of X Windows,
      Houdini turns the keyboard key repeat off while the cursor is inside
      one of the 3D Viewports and on again when the cursor leaves a
      Viewport.

      If you find the key repeat is off on your system, run the
      `xset r on` command to turn key repeat on again.



