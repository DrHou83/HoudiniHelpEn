= Edit Parameter Interface window =

#helpid: h.opmenu.spareparms

"""Creates, imports, or edits parameters on a node."""

== Overview ==

The controls in this window let you edit which parameters appear in the [parameter editor|/ref/panes/parms] for a node.

You can:

- Import or promote parameters from another node, such as from a surface node up to its [geometry container|/nodes/obj/geo], to make controls more easily available.

- Add [rendering properties|/props].

- Add extra ("spare") parameters to a node that can be used by expressions and/or scripts.

NOTE:
    This window lets you add/edit/remove parameters for a particular node. It does not affect all nodes of the same type. To [edit the parameter interface of a digital asset|/assets/asset_ui], use the [operator type properties window|optype].

== Open the window ==

# Select the node you want to edit in the [network editor|/ref/panes/network].

# In the [parameter editor|/ref/panes/parms], click the [Icon:BUTTONS/gear] Gear icon and choose __Edit parameter interface__.

    This window lets you create new parameters on a node, add rendering controls, and copy parameters from other nodes onto this one.

== Import parameters from another node ==

# Open the Edit Parameter Interface window (see above).

# Click the __From Existing Nodes__ tab on the left side. Use the tree control to select a parameter on a node, then drag it into the __Existing parameters__ pane, or click the [Icon:BUTTONS/move_to_right] "move right" button.

    *OR*
    
    Select the other node in the [network editor|/ref/panes/network] and drag the parameter directly from the [parameter editor|/ref/panes/parms] into the __Existing parameters__ pane of the Edit Parameter Interface window.

# Use the options under __Parameter Description__ on the right side of the window to customize the destination parameter's appearance and behavior (this does not affect the source parameter on the other node).

When you import a parameter from another node, Houdini automatically edits the source parameter to be a parameter reference expression that looks up the value of the destination parameter. Once you import a parameter, you should only edit the destination parameter, not the source parameter (unless you delete the destination parameter to break the connection).

== Render properties ==

See [the section on render properties|/props] for information on rendering properties.

# Open the Edit Parameter Interface window (see above).

# Click the __Render Properties__ tab on the left side. Use the tree control to select a property, then drag it into the __Existing parameters__ pane, or click the [Icon:BUTTONS/move_to_right] "move right" button.

== Spare parameters ==

Spare parameters let you store extra information on a node. You can add spare parameters to any node to provide extra storage for values and expressions. They are not used directly by the node, but you can reference them in other standard node parameters using expressions. Adding a spare parameter to a node only adds it to that node, not all the nodes of that operator type.

You can [keyframe|/anim/autokey] spare parameters,
reference them, and add them to [takes|/basics/takes] .

# Open the Edit Parameter Interface window (see above).

# Click the __By type__ tab on the left side. Select the type of parameter you want to add, then drag it into the __Existing parameters__ pane, or click the [Icon:BUTTONS/move_to_right] "move right" button.

# Use the options under __Parameter Description__ on the right side of the window to customize the parameter's appearance and behavior.

== Parameter Description ==

[Include:optype#parms_tab]

[Include:optype#menu_tab]

== Example ==

=== Create a sphere and add squash and stretch ===
    
    # In this example, we'll create a new "squash" parameter on a ball object by promoting a parameter from a node inside the ball's geometry network.
    
    # First, use the [Icon:SOP/sphere] [Sphere tool|/shelf/sphere]  on the Create shelf to create a sphere. In the operation control toolbar (along the top of the viewer), set the sphere's __Primitive type__ to __Polygon__ and the __Frequency__ to `4`.
    
    # Select the sphere and use the [Icon:SHELF/twist_squashstretch] [Squash and Stretch tool|/shelf/squashstretch] on the Deform shelf to add squash and stretch to the sphere.
    
    # The squash and stretch tool automatically dives into the sphere's geometry container to show you its surface nodes: a [sphere node|Node:sop/sphere] that creates the sphere geometry, and a [twist node|Node:sop/twist] set to squash and stretch.
    
    # Select the twist node (probably called `squashstretch1`). In the [parameter editor|/ref/panes/parms] you can see that its __Operation__ parameter is set to __Squash & Stretch__.
    
    # Set the node's __Primary axis__ parameter to __Y axis__. Set the __Pivot__ to `0 -1 0` to move the center of the squash and stretch to the bottom of the sphere (since the sphere is 1 unit in radius, moving the pivot down 1 along the Y axis puts it at the bottom of the sphere).
    
    # Move the mouse over the __Strength__ text box and press and hold ((MMB)). Drag left and right to squash and stretch the sphere.
    
        Note that negative values squash the sphere down, positive values stretch it up, and that the values need to be fairly small, so the slider beside __Strength__ which goes from 0 to 360 is not very useful. You'll want to type in values or use the ((MMB)) ladder instead.
    
=== Promote the Strength parameter from the squash and stretch node ===
    
    Now we'll promote the __Strength__ parameter from the squash and stretch node up to the geometry container so we can edit it at the Scene level.

    # Click [Icon:BUTTONS/back] Back to return the Scene level.
    
    # Click the ball's object container to show its parameters in the parameter editor.
    
    # In the parameter editor, click the [Icon:BUTTONS/gear] Gear menu and choose __Edit parameter interface__.
    
    # In the Edit Parameter Interface window, click __From existing nodes__ on the left side.
    
    # Use the tree control to find the squash and stretch node inside the ball. Open it up to show its parameters inside. Drag the `strength` parameter onto the __Existing parameters__ tree, just above the __Translate__ parameter.
    
    # In the __Parameter description__ section on the right side, set the __Label__ option to `Squash`. This is the human-readable label that will appear in the parameter editor.
    
    # In the __Interface options__ subsection below, set the __Range__ to `-2, 2`.
    
    # Click __Apply__.
    
    # Try using the new __Squash__ parameter on the object.
    
    
