= Working with render nodes =


== Overview ==

Houdini provides different types of render nodes:

* Nodes corresponding to renderers and scene description formats (such as the [Mantra node|Node:out/ifd] and [RenderMan node|Node:out/rib]). These nodes output scene description files and call the appropriate renderer to render the file.

* Nodes for generating other outputs, such as the [Geometry node|Node:out/geometry] which "renders" the scene geometry to a geometry format such as `.bgeo` or `.obj`.

* Utility nodes to control renders and dependencies. For example, you can use the [Merge node|Node:out/merge] to sequence renders. You can use the [Switch node|Node:out/switch] to switch between different render nodes based on an expression.

For example, you can set up different output nodes for [different render qualities|/render/quality] (such as test render and final render) and independent render passes. Or, you can render a scene with different renderers.

Each driver renders the view of the scene through a [camera|/render/cameras]. For a driver to work correctly, the camera associated with the driver must exist.

NOTE:
    Houdini's [shaders|/shade/] are specific to particular renderers. Rendering with a different renderer will require you to use different shaders on your objects. However, you can [switch shaders based on the renderer|Node:shop/switch].


== How to ==

:task:Create a new render node:
    Choose __Render > Create Render Node__ from the main menu.

:task:Edit an existing render node:
    Choose __Render > Edit Render Node__ from the main menu.

:task:Start a render:
    * In the render node's parameter editor, click the __Render__ button.
    
    or
    
    * In the network editor, click the __Render__ button on the right side of the node (see [render node flags/buttons|#flags] below).

:task:Show the render network:
    Click the first segment of the [path control|/network/navigate] at the top of a network editor and choose __Other networks > out__.

:task:Make one render node depend on the output of another:
    [Wire the nodes together|/network/wire] to create dependency relationships. See [render dependencies|/render/batch].

:task:Prevent a render node/branch from rendering:
    Use the Bypass flag or Lock flag (see [render node flags/buttons|#flags] below).


== Tips and notes ==

* Bypassing or locking a subnetwork will prevent any of the ROPs inside from rendering.

* You can still force a bypassed or locked render node to render using the "Render All Bypassed Nodes" and "Render All Locked Nodes" options in the  [render control window|/ref/windows/rendercontrol].  
