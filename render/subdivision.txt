= Subdivision surfaces and curves =

== Overview ==

Subdivision smooths and adds extra resolution to curves and surfaces at _display_ and/or _render_ time. The renderer subdivides the surface until it's smooth down to the pixel level.

This lets you work with efficient low-polygon models and only add the smoothing "on demand" on the graphics card (for display) or in the renderer. The tradeoff is that subdivision curves/surfaces take slightly longer to render. However, smoothing low-resolution polylines using curve subdivision is still much faster than working with inherently smooth primitives such as NURBS curves.

[Image:/images/render/subdivide_before.jpg]
[Image:/images/render/subdivide_render.jpg]

You can turn on _display_ subdivion and _render_ subdivision separately at the object level.

=== Geometry ===
#display: pull left

You can "bake" subdivisions into geometry (that is, actually create new polygons in the scene instead of just smoothing at display/render time) using the [Icon:SOP/subdivide][Subdivide SOP|Node:sop/subdivide]. You must manually specify the number of subdivision levels in the geometry. Each level will add 4x the number of polygons.

=== Subdividing by material === (material)
#display: pull left

You can add the [Render polygons as subdivision|Mantra:vm_rendersubd] render [property|/props/] to a material to have any surfaces with that material render as subdivided. This can be useful to subdivide certain parts of the model and not others, based on materials.

You can also change the property using [material stylesheets|/shade/stylesheets].

=== Creasing ===
#display: pull left

You can specify that certain edges should be sharp using _crease attributes_.

[Image:/images/render/subdivide_crease.jpg]

=== Subdivision styles ===
#display: pull left

Houdini can use two *subdivision styles*: "Mantra Catmull-Clark" uses the algorithm included with previous versions of Houdini. "OpenSubdiv Catmull-Clark" uses the algorithm from the OpenSubdiv library. You can choose one or the other if you need to match the look of existing Houdini files or output from packages using OpenSubdiv.

== How to ==

:task:Set an object to render subdivided:
    # Select the object.
    # In the parameter editor, click the __Render__ tab.
    # Turn on __Render polygons as subdivision (Mantra)__.
    
    An object that is rendered as subdivision does not automatically display as subdivided in the 3D view. If you want to see the object as subdivided in the view, you need to also set __Display as__.

:task:Set an object to display subdivided:
    # Select the object.
    # In the parameter editor, click the __Render__ tab.
    # Set __Display as__ to "Subdivision Surface / Curves".
    
    The subdivision occurs on the graphics card so it should be fast and efficient.

:task:Only apply subdivision to certain geometry groups in the object:
    # Select the object.
    # In the parameter editor, click the __Render__ tab.
    # Set the __Subdivision group__ to the [group|/model/groups](s) you want to subdivide.
    
    See also [how to apply subdivision by material|#material] above.
    
:task:Crease certain edges:
    Use the [Crease SOP|Node:sop/crease] to add crease weight attributes to selected edges. You can increase or decrease the crease weight value to control the sharpness of the edges.

    This image was rendered with a crease weight of 3 on the end caps:

    [Image:/images/render/subdivide_crease.jpg]
