= Light bank =

#helpid: h.pane.datatree.lightbank

"""The _light bank_ is a [data tree|/ref/panes/datatree] view that lets you set various parameters on all lights in a scene through a single interface."""

== Overview ==

Each light in the scene is represented by a row in the spreadsheet.  The columns in the spreadsheet let you rename lights, turn them on or off, link lights to objects, and change commonly used parameters such as light intensity.

== How to ==

:task:Create a light bank pane:
    # Click the [Smallicon:BUTTONS/new_tab] New tab icon in the top line of a pane.

    # Choose __New pane tab type > Data tree__.
    
    # Click the pop-up menu in the top left corner and choose "Light bank".

:task:Turn a single light on and all other lights off (solo): 
    Click the [Smallicon:BUTTONS/light_solo] Solo radio button for the light in the spreadsheet.
    
    Click the radio button again to turn off soloing.

:task:Turn a single light off (mute):
    Click the [Smallicon:BUTTONS/light_mute] Mute checkbox for the light in the spreadsheet.
    
    Turn the checkbox off to re-enable the light.

:task:Link a light to specific objects:
    # In the spreadsheet, click the "Link" cell for the light.
    
    # Click the icon to select the objects from a chooser, _or_ if you know the paths of the objects you want to link, you can edit the cell contents directly.
    
    Editing this cell automatically sets the __Light mask__ on the linked objects. You can use a name pattern (for example `hero*`).

:task:Change light intensity, color, type, or category tags:
    In the spreadsheet, click in a cell to edit the value. This changes the corresponding parameter on the light object.

== Tips ==

* [Net boxes|/network/organize] and sub-networks appear as levels of hierarchy in the spreadsheet tree. You can use them to organize both the network and the light bank.

* For object-centric editing of light tags, use the [appearance editor|/model/appearance].

== Showing custom lights in the light bank ==

If you create a custom light [asset|/assets], you need to do a little bit of extra work to have the light bank recognize instances of the asset as lights.

# Open the [type properties|/ref/windows/optype] for the asset: right click the asset and choose __Type properties__. (If the asset is locked, you first need to right click the asset and choose __Allow editing of contents__.)

# In the __Extra files__ tab, click __Add empty section__ and change the __Section name__ to `LightBank`.

# On the right side, you can write JSON to configure how to map the light bank interface to parameters on your light asset.

The JSON can have three keys:

`enable`:
    A parameter name string specifying the name of the parameter that controls whether your asset emits light. The light bank changes this parameter when you use its "solo" or "mute" controls.

`color`:
    A string specifying the name of the parameter that controls your asset's color. The light bank maps this to a color control in the spreadsheet.

`extra`:
    A list (array) of strings specifying the names of parameters to include as extra columns in the light spreadsheet. Houdini will automatically provide an editing UI for the parameter values based on the parameter type.

For example:

{{{
#!json

{
    "enable": "tl_enable",
    "color": "tl_color",
    "extra" : ["tl_intensity", "tl_teatime"]
}
}}}
