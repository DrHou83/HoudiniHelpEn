= Rendering |> with AIR =

:task:Set up the default rendering controls:

    Set the environment variable `HOUDINI_DEFAULT_RIB_RENDERER`. The value of this variable should be one of the supported RIB renderers.

    For AIR, you would choose

    {{{
    #!bash
    export HOUDINI_DEFAULT_RIB_RENDERER=air4.0
    }}}
    
    or whatever the current version being used is.

    When this variable is set, VOPs will compile using `shaded` (the AIR shader compiler, and the RenderMan output driver will have settings which apply for AIR.

:task:Set up "View: RenderMan":

    Set the environment variable `HOUDINI_VIEW_RMAN`. For AIR:

    {{{
    #!bash
    export HOUDINI_VIEW_RMAN=air
    }}}

    This variable determines the command to run when __View: RenderMan__ is chosen from the viewport. This variable is also used for the shader ball.

:task:Override the shader path:

    By default, Houdini will set the path to the default path that the render expects. If you want, you can override the shader path in two ways.

    # Set the path by adding the rendering parameter to the output driver (preferred method).

    # Set the environment variable `HOUDINI_RI_SHADERPATH`.

    NOTE:
        If you customize the path, you should include `$HFS/ri_shaders` in the path for light shaders. If the shader path is left untouched, then Houdini will look for directories named `ri_shaders` in the `HOUDINI_PATH`.
    
:task:Customize object parameters:

    If you are using AIR as a primary renderer, you may not want to see all of the mantra parameters in your geometry objects. You can customize Houdini so that instead, you'll see the parameters which are appropriate for AIR.

    The mantra parameters are created in the creation script for the geometry object. This script can be found in `$HH/scripts/obj/geo.cmd`. The line which adds the rendering properties is

        {{{
        opproperty -f -F Render $arg1 mantra9.0 default_geometry
        }}}

    To change the default parameters, do the following:

    # Decide which properties you want for the renderer. For example: `ri_rendersubd`, `ri_renderpoints`, `ri_computeN`, `ri_curvebasis`, and `ri_motionfactor`.

    # Copy the file `$HH/scripts/obj/geo.cmd` to a location earlier in the HOUDINI_PATH (i.e. /houdini9.0/scripts/obj/geo.cmd).

    # Edit the script replacing the `opproperty` command with

        {{{
        #!bash
        opproperty -f -F Render $arg1 air4.0 ri_rendersubd
        opproperty -f -F Render $arg1 air4.0 ri_renderpoints
        opproperty -f -F Render $arg1 air4.0 ri_computeN
        opproperty -f -F Render $arg1 air4.0 ri_curvebasis
        opproperty -f -F Render $arg1 air4.0 ri_motionfactor
        etc.
        }}}

@related

- [Rendering with RenderMan|/render/renderman]
