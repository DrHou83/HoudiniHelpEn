= Transformation constraints =
#parent: riggingconstraints

Point, orientation, scale, parent, and aim constraints are all types of transformation constraints. They can be controlled by the [Blend Object|Node:obj/blend], [Object CHOP|Node:chop/object], or by hscript and python expressions.

== Blend object ==

The [Icon:OBJ/blend][Blend Object|Node:obj/blend] constraint will constrain the blending of a child object to a specific parent. The __Sequence__ value defines which parent the blend is constrained to, and the __Rest Frame__ defines the frame at which the blend will reset to its default value.

This could also be useful to prevent rotations or scales in certain areas. For example, if you want to prevent the base of the spine from rotating when the hips rotate you can insert a [Blend Object|Node:obj/blend] between the hip and spine bones. Then, in the __Blend__ section of the __Parents__ tab, toggle the three rotate buttons (`RX, RY, RZ`). Other uses for this tool include blending between two sets of controllers, such as arm space or neck and spine.

The Blend object can also be used to inherit translates and rotates from two different objects.
 
== Object CHOP ==

The [Object CHOP|Node:chop/object] is used when you want to constrain two objects in different hierarchies.

== Hscript and python expressions ==

You can use hscript expressions such as [vtorigin|/expressions/vtorigin], or python expressions such as [mlookat|/expressions/mlookat] and [mlookatup|/expressions/mlookatup]. 

NOTE:
    [mlookat|/expressions/mlookat] and [mlookatup|/expressions/mlookatup] are aim constraints.
    
@related
- [Parent Blend|/shelf/parentblend]