#type: expression
#category: nodes

= optypeinfo =

"""Returns type information about a node."""

:usage: `optypeinfo(<<name>>, <<pattern>>)`

Unlike [Exp:optype] which just returns a node's type, this allows
you to specify a string of parameters which will cause different things
to be output.

The pattern string may contain the following characters.

N:
    The name of the node. For `/obj/geo1`, this would be `geo1`.
r:
    The type of the node, same as in [Exp:optype]. For
    `/obj/geo1`, this would be `geo`.
e:
    The type's label. For `/obj/geo1`, this would be `Geometry`.
n:
    The network type of the operator. For `/obj/geo1`, this would be
    `OBJ`.
s:
    The script path of the operator. For `/obj/geo1`, this would be
    `obj`.
i:
    The operator's index. This number corresponds to the network type.
T:
    The table name of the operator. For `/obj/geo1`, this would be
    `Object`.
t:
    The operator type. For `/obj/model`, this would be `geo`.
o:
    The full operator type name, consisting of the table name and operator name,
    separated by a `/`, while also taking into account any namespace 
    or version operator type name components. For `/obj/model`, this would be
    `Object/geo`, or for namespaced HDA it may be `ns::Object/myhda::1.0`.


@examples
    {{{
    #!exp
    optypeinfo("/obj/geo1", "NtT")
    
    "geo1 geo Object"
    }}}

@related

- [Exp:optype]
