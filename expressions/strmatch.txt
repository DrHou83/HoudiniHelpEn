#type: expression
#category: strings

= strmatch =

"""Returns 1 if a string matches a pattern, including case."""

:usage: `strmatch(<<pattern>>, <<s>>)`

This function is case-sensitive. For case-insensitive matches,
use [Exp:strcasematch].
    
== Notes == (notes)

- Returns 1 if any patterns in the <<pattern>> string matches string <<s>>,
  or 0 if no patterns match.

- In order to match, a pattern must match the <<s>> string
  _from beginning to end_. Use wildcards (`*`) to match substrings,
  e.g.
  
  {{{
  #!exp
  strmatch("bar", "foobarbaz") = 0
  strmatch("*bar*", "foobarbaz") = 1
  }}}

- <<pattern>> is a space-separated list of one or more patterns.
  *This can cause unintuitive behavior of this function*.
  For example:
    
  {{{
  #!exp
  strmatch("foo bar", "foo bar")
  }}}

  ...*will return 0*, because the first argument consists of _two_
  patterns, `foo` and `bar`, and neither of those patterns match
  `foo bar` (since the pattern must match from beginning to end).
    
  Similarly,
  
  {{{
  #!exp
  strmatch("foo bar", "foo")
  }}}
    
  ...will return 1, because the string matches the first of the
  two arguments in the pattern (`foo` and `bar`).

@examples

{{{
#!exp
strmatch("foo*", "foobar") = 1
}}}

{{{
#!exp
strmatch("?bar", "fred") = 0
}}}

{{{
#!exp
strmatch("foo*,bar*", "bar") = 1
}}}

@related

- [Exp:strcmp]
- [Exp:strcasecmp]
- [Exp:strcasematch]

